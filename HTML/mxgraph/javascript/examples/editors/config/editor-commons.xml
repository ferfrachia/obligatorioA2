<mxEditor>
	<ui>
		<resource basename="/mxgraph/javascript/examples/editors/resources/mxApplication"/>
		<resource basename="/mxgraph/javascript/examples/editors/resources/mxVisualizacion"/>
	</ui>
	<mxDefaultPopupMenu as="popupHandler">		
		<add as="cut" action="cut" icon="/mxgraph/javascript/examples/editors/images/cut.gif"/>
		<add as="copy" action="copy" icon="/mxgraph/javascript/examples/editors/images//copy.gif"/>
		<add as="paste" action="paste" icon="/mxgraph/javascript/examples/editors/images//paste.gif"/>
		<separator/>
		<add as="delete" action="delete" icon="/mxgraph/javascript/examples/editors/images//delete.gif" if="cell"/>
		<separator/>
		<add as="Asignar seccion" action="asignarSeccion" icon="/mxgraph/javascript/examples/editors/images//properties.gif" if="cell"/>
		<add as="Asignar pase" action="asignarPase" icon="/mxgraph/javascript/examples/editors/images//properties.gif" if="cell"/>
		<add as="Asignar dias" action="asignarDias" icon="/mxgraph/javascript/examples/editors/images//properties.gif" if="cell"/>
		<add as="Asignar horas" action="asignarHoras" icon="/mxgraph/javascript/examples/editors/images//properties.gif" if="cell"/>
		<add as="Asignar agente" action="asignarAgente" icon="/mxgraph/javascript/examples/editors/images//properties.gif" if="cell"/>
		<add as="Asignar avisos" action="asignarAvisos" icon="/mxgraph/javascript/examples/editors/images//properties.gif" if="cell"/>
	</mxDefaultPopupMenu>
	<include name="config/keyhandler-commons.xml"/>
	<Array as="actions">	
		<add as="open"><![CDATA[
			function (editor)
			{
				editor.open(mxUtils.prompt('Enter filename', 'workflow.xml'));
			}
		]]></add>
		<add as="openHref"><![CDATA[
			function (editor, cell)
			{
				cell = cell || editor.graph.getSelectionCell();
				
				if (cell == null)
				{
					cell = editor.graph.getCurrentRoot();

					if (cell == null)
					{
						cell = editor.graph.getModel().getRoot();
					}
				}

				if (cell != null)
				{
					var href = cell.getAttribute('href');
					
					if (href != null && href.length > 0)
					{
						window.open(href);
					}
					else
					{
						mxUtils.alert('No URL defined. Showing properties...');
						editor.execute('showProperties', cell);
					}
				}
			}
		]]></add>
		<add as="editStyle"><![CDATA[
			function (editor)
			{
				var cell = editor.graph.getSelectionCell();
				
				if (cell != null)
				{
					var model = editor.graph.getModel();
					var style = mxUtils.prompt(mxResources.get('enterStyle'), model.getStyle(cell) || '');

					if (style != null)
					{
						model.setStyle(cell, style);
					}
				}
			}
		]]></add>
		<add as="fillColor"><![CDATA[
			function (editor)
			{
				var color = mxUtils.prompt(mxResources.get('enterColorname'), 'red');
				
				if (color != null)
				{
					editor.graph.model.beginUpdate();
					try
					{
						editor.graph.setCellStyles("strokeColor", color);
						editor.graph.setCellStyles("fillColor", color);
					}
					finally
					{
						editor.graph.model.endUpdate();
					}
				}
			}
		]]></add>
		<add as="gradientColor"><![CDATA[
			function (editor)
			{
				var color = mxUtils.prompt(mxResources.get('enterColorname'), 'white');
				
				if (color != null)
				{
					editor.graph.setCellStyles("gradientColor", color);
				}
			}
		]]></add>
		<add as="strokeColor"><![CDATA[
			function (editor)
			{
				var color = mxUtils.prompt(mxResources.get('enterColorname'), 'red');
				
				if (color != null)
				{
					editor.graph.setCellStyles("strokeColor", color);
				}
			}
		]]></add>
		<add as="fontColor"><![CDATA[
			function (editor)
			{
				var color = mxUtils.prompt(mxResources.get('enterColorname'), 'red');
				
				if (color != null)
				{
					editor.graph.setCellStyles("fontColor", color);
				}
			}
		]]></add>
		<add as="fontFamily"><![CDATA[
			function (editor)
			{
				var family = mxUtils.prompt(mxResources.get('enterFontfamily'), 'Arial');
				
				if (family != null && family.length > 0)
				{
					editor.graph.setCellStyles("fontFamily", family);
				}
			}
		]]></add>
		<add as="fontSize"><![CDATA[
			function (editor)
			{
				var size = mxUtils.prompt(mxResources.get('enterFontsize'), '10');
				
				if (size != null && size > 0 && size < 999)
				{
					editor.graph.setCellStyles("fontSize", size);
				}
			}
		]]></add>
		<add as="image"><![CDATA[
			function (editor)
			{
				var image = mxUtils.prompt(mxResources.get('enterImageUrl'),
					'/mxgraph/javascript/examples/editors/images/image.gif');
				
				if (image != null)
				{
					editor.graph.setCellStyles("image", image);
				}
			}
		]]></add>
		<add as="opacity"><![CDATA[
			function (editor)
			{
				var opacity = mxUtils.prompt(mxResources.get('enterOpacity'), '100');
				
				if (opacity != null && opacity >= 0 && opacity <= 100)
				{
					editor.graph.setCellStyles("opacity", opacity);
				}
			}
		]]></add>
		<add as="straightConnector"><![CDATA[
			function (editor)
			{
				editor.graph.setCellStyle("straightEdge");
			}
		]]></add>
		<add as="elbowConnector"><![CDATA[
			function (editor)
			{
				editor.graph.setCellStyle("");
			}
		]]></add>
		<add as="arrowConnector"><![CDATA[
			function (editor)
			{
				editor.graph.setCellStyle("arrowEdge");
			}
		]]></add>
		<add as="toggleOrientation"><![CDATA[
			function (editor, cell)
			{
				editor.graph.toggleCellStyles(mxConstants.STYLE_HORIZONTAL, true);
			}
		]]></add>
		<add as="toggleRounded"><![CDATA[
			function (editor)
			{
				editor.graph.toggleCellStyles(mxConstants.STYLE_ROUNDED);
			}
		]]></add>
		<add as="toggleShadow"><![CDATA[
			function (editor)
			{
				editor.graph.toggleCellStyles(mxConstants.STYLE_SHADOW);
			}
		]]></add>
		<add as="horizontalTree"><![CDATA[
			function (editor, cell)
			{
				cell = cell || editor.graph.getSelectionCell();
				
				if (cell == null)
				{
					cell = editor.graph.getDefaultParent();
				}
				
				editor.treeLayout(cell, true);
			}
		]]></add>
		<add as="verticalTree"><![CDATA[
			function (editor, cell)
			{
				cell = cell || editor.graph.getSelectionCell();
				
				if (cell == null)
				{
					cell = editor.graph.getDefaultParent();
				}
				
				editor.treeLayout(cell, false);
			}
		]]></add>
		
		<add as="asignarDias"><![CDATA[
			function (editor)
			{
				var cell = editor.graph.getSelectionCell();
				
				if (cell != null) {
					if (cell.isVertex()) {
						if ((cell.getAttribute('description') != 'Inicio') && (cell.getAttribute('description') != 'Fin')) {
							var numDias = mxUtils.prompt('Ingrese la cantidad de d&iacuteas maximo para esta seccion:', '');
							if (numDias != null)	{
								cell.setAttribute('numDias', numDias);
								
								//editor.graph.setTooltips(true);
								//urlImagen = '/mxgraph/javascript/examples/editors/images/overlays/numeros/' + numDias + 'Dia.png'
								//var overlay = new mxCellOverlay(new mxImage(urlImagen, 16, 16), 'Dias ' + numDias);
								//overlay.align = "left";
								//overlay.verticalAlign = "top";
								//editor.graph.removeCellOverlays(cell);
								//editor.graph.addCellOverlay(cell, overlay);
								//editor.graph.refresh(cell);
							}
						}
					}
				}
			}
		]]></add>
		<add as="asignarHoras"><![CDATA[
			function (editor)
			{
				var cell = editor.graph.getSelectionCell();
				
				if (cell != null) {
					if (cell.isVertex()) {
						if ((cell.getAttribute('description') != 'Inicio') && (cell.getAttribute('description') != 'Fin')) {
							var numHoras = mxUtils.prompt('Ingrese la cantidad de d&iacuteas maximo para esta seccion:', '');
							if (numHoras != null)	{
								cell.setAttribute('numHoras', numHoras);
								
								//editor.graph.setTooltips(true);
								//urlImagen = '/mxgraph/javascript/examples/editors/images/overlays/numeros/' + numHoras + 'Dia.png'
								//var overlay = new mxCellOverlay(new mxImage(urlImagen, 16, 16), 'Horas ' + numHoras);
								//overlay.align = "right";
								//overlay.verticalAlign = "top";
								//editor.graph.removeCellOverlays(cell);
								//editor.graph.addCellOverlay(cell, overlay);
								//editor.graph.refresh(cell);
							}
						}
					}
				}
			}
		]]></add>
		<add as="asignarSeccion"><![CDATA[
			function (editor)
			{
				var cell = editor.graph.getSelectionCell();
				
				if (cell != null) {
					if (cell.isVertex()) {
						if ((cell.getAttribute('description') != 'Inicio') && (cell.getAttribute('description') != 'Fin')) {
							var numSeccion = mxUtils.prompt('Ingrese el numero de seccion:', '');
							if (numSeccion != null)	{
								cell.setAttribute('numSeccion', numSeccion);
								
								editor.graph.setTooltips(true);
								urlImagen = '/mxgraph/javascript/examples/editors/images/overlays/numeros/' + numSeccion + '.png'
								var overlay = new mxCellOverlay(new mxImage(urlImagen, 16, 16), 'Seccion ' + numSeccion);
								//editor.graph.removeCellOverlays(cell);
								editor.graph.addCellOverlay(cell, overlay);
								editor.graph.refresh(cell);
							}
						}
					}
				}
			}
		]]></add>
		<add as="asignarPase"><![CDATA[
			function (editor)
			{
				var cell = editor.graph.getSelectionCell();
				
				if (cell != null) {
					if (cell.isVertex()) {
						if ((cell.getAttribute('description') != 'Inicio') && (cell.getAttribute('description') != 'Fin')) {
							var numPase = mxUtils.prompt('Ingrese el pase a donde voy a retornar:', '');
							if (numPase != null)	{
								cell.setAttribute('numPase', numPase);
								editor.graph.setTooltips(true);
								urlImagen = '/mxgraph/javascript/examples/editors/images/overlays/numeros/' + numPase + 'Pase.png';
								var overlay = new mxCellOverlay(new mxImage(urlImagen, 16, 16), 'Pase ' + numPase);
								overlay.align = "left";
								editor.graph.addCellOverlay(cell, overlay);
								editor.graph.refresh(cell);
							}
						}
					}
				}
			}
		]]></add>
		<add as="asignarAgente"><![CDATA[
			function (editor)
			{
				var cell = editor.graph.getSelectionCell();
				
				if (cell != null) {
					if (cell.isVertex()) {
						if ((cell.getAttribute('description') != 'Inicio') && (cell.getAttribute('description') != 'Fin') && (cell.getAttribute('description') == 'Accion')){
							var nombreAgente = mxUtils.prompt('Ingrese el agente que se va a ejecutar con dicha accion', '');
							if (nombreAgente != null)	{
								cell.setAttribute('nombreAgente', nombreAgente);
								editor.graph.setTooltips(true);
								cell.setAttribute('label', nombreAgente);
								editor.graph.refresh(cell);
							}
						}
					}
				}
			}
		]]></add>
		<add as="asignarAvisos"><![CDATA[
			function (editor)
			{
				var cell = editor.graph.getSelectionCell();
				var tel;
				var cel;
				var mail;
				
				if (cell != null) {
					if (cell.isVertex()) {
						if ((cell.getAttribute('description') != 'Inicio') && (cell.getAttribute('description') != 'Fin')) {
							tel = cell.getAttribute('avisoTelefono');
							cel = cell.getAttribute('avisoCelular');
							mail = cell.getAttribute('avisoMail');
							if (tel == '1'){
								document.getElementById('ck_Voz').checked = 1;
							}else{
								document.getElementById('ck_Voz').checked = 0;
							}
							if (cel == '1'){
								document.getElementById('ck_Sms').checked = 1;
							}else{
								document.getElementById('ck_Sms').checked = 0;
							}
							if (mail == '1'){
								document.getElementById('ck_Mail').checked = 1;
							}else{
								document.getElementById('ck_Mail').checked = 0;
							}
							celdaMx = cell;
							editorMx = editor;
							dijit.byId('confAvisosDialog').show();
						}
					}
				}
			}
		]]></add>
	</Array>
</mxEditor>
