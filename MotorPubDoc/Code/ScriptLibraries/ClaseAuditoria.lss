'++LotusScript Development Environment:2:5:(Options):0:74
Option Declare
'******************************************************************************************************************
'* 
'*								CLASS AUDITORIA
'*
'******************************************************************************************************************
'* El formato de las bases debe ser : path/NOMBREMODULO + anio_nro.nsf   (EJ: path/Auditoria2003_2.nsf )
'* El formato de las claves debe ser : ClaveGeneral + Anio_Numero (Ej: AUDITORIA2003_05)
'*
'*	Contructor
'*
'*		Public Sub new()
'*
'*
'*	Métodos
'*
'*		Public Sub registrar()
'*		'Genera un documento de registro de operacion en la base
'*
'*
'*		Public Property Get usuario(Byval sUser As String) As String
'*
'*
'*		Public Property Set usuario(Byval sUser As String) As String
'*
'*
'*		Public Property Get operacion(Byval sOper As String) As String
'*
'*
'*		Public Property Set operacion(Byval sOper As String) As String
'*
'*
'*		Public Property Get numeroDoc(Byval sNro As String) As String
'*
'*
'*		Public Property Set numeroDoc(Byval sNro As String) As String
'*
'*
'*
'*

Use "Errores Generales" 
Use "ClaseConfDocumentos"
Use "FuncionesGenerales"

'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Public Class Auditoria

'++LotusScript Development Environment:2:5:(Declarations):0:10

Const NOMBRE_MODULO									="AuditoriaDocumentos"
Const FORM_OPERACION								="FDetalleRegistro"
Const NUMERO_PRIMER_BASE								=1
Const MAX_NUMERO_BASE_NOT_FOUND						=-1
Private Const CLAVE_DBAUDITORIA						= "AuditoriaDocumentos"

Const STR_BARRA_INV									="\"

'Recordar de modificar la clase y formualrio configuracion cuando se agregguen los nuevos parametros para 
'lista de operaciones a registrar, y tiempo máximo de generación=Tiempo de vida de la base de auditoria

Public Class Auditoria
	Private db As notesDatabase
	Private sUsuario As String
	Private sNroDocumento As String
	Private sOperacion As String
	Private sParamOperacion As String
	Private sTipoDocumento As String
	Private tFecha As NotesDateTime
	Private flagCreate As Boolean
	
'******************************************************************************************************************	
'******************************************************************************************************************	
'Privadas
	
	Private Function tiempoCumplido(c As ConfDocumentos,fechaCreacion As Variant) ',sClave As String) As Integer
		On Error Goto errorHandler
		Dim vClaves As New vector(0),vFechas As New Vector(0), i As Integer
		Dim dFecha As Variant
		tiempoCumplido=False
		Dim fNow As notesDateTime,fCreada As notesDateTime
		Set fNow=New notesDateTime(Now)
		Set fCreada= New notesDateTime(fechaCreacion)
		If Isnumeric(c.TiempoVidaAuditoria()) Then
			If ( Cint(fNow.Timedifference(fCreada)/86400) >= c.TiempoVidaAuditoria() ) Then
				tiempoCumplido = True
			Else
				tiempoCumplido=False
			End If	
		Else
			tiempoCumplido=False
		End If		
		Exit Function
errorHandler:
		Msgbox "tiempo cumplido ---> ERROR:" & Err & " "& Erl & " " & Error$
		'Call RegistrarYGenerarError(NOMBRE_APLICACION, " Clase Auditoria - TiempoCumplido ", "")
		Call RegistrarYGenerarError2(Err, Error$, NOMBRE_APLICACION, "Clase Auditoria - TiempoCumplido" , Erl, "")
		Exit Function
	End Function
	
'******************************************************************************************************************	
	
	Private Sub notificarBaseCreada(destino As Variant)
		On Error Goto errorHandler
		
		If Isempty(destino) Then
			Exit Sub
		End If
		
		Dim mail As notesDocument
		Set mail=New notesDocument(db)
		mail.form="Memo"
		mail.Principal="Sistema de Expedientes Electrónico"
		mail.subject="Atención: Nueva base de Auditoría " 
		
		Dim rti As NotesRichTextItem
		Set rti=New NotesRichTextItem(mail,"Body")
		rti.AppendText  "Se ha creado una nueva base de auditoría. " 
		rti.AddNewline 2
		rti.AppendText "Servidor: " & db.Server
		rti.AddNewline 1
		rti.AppendText "Archivo: " & db.FilePath 
		
		
		mail.send False,destino
		
		
		Exit Sub
errorHandler:
		'Call RegistrarYGenerarError(NOMBRE_APLICACION, " Clase Auditoria - notificarBaseCreada ", "")
		Call RegistrarYGenerarError2(Err, Error$, NOMBRE_APLICACION, "Clase Auditoria - notificarBaseCreada" , Erl, "")
		Exit Sub
	End Sub
'***********************************************************************************************************************	
	
	Private Sub crearBase(c As ConfDocumentos,sNumBase As Integer) 		'Teminar busqueda de base en Conf
		On Error Goto errorHandler
		Dim template As New notesDatabase("","")
		Dim sPath As String,sFile As String,server As String
		Dim session As New notesSession,ssDB As notesDatabase
		Dim searchDb As NotesDatabase
		Dim flagCreate As Integer
		Dim dbAux As NotesDatabase 
		flagCreate = True
		sPath=""
		Set dbAux=c.ReferenciarBaseDeDatos(CLAVE_DBAUDITORIA_TEMPLATE)
		'Msgbox "*******************El template de la base de datos auditoria es: " & CLAVE_DBAUDITORIA_TEMPLATE & " la db es: " & dbAux.FilePath
		'Msgbox "####################################El path de la base auditoria es: "& dbAux.FilePath
		If template.open(session.CurrentDatabase.Server,dbAux.FilePath) Then
			'Msgbox "####################################   1"
			If db Is Nothing Then
				'Msgbox "####################################   2"
				Set session = New notesSession
				Set ssDB=session.currentDatabase
				server=ssDB.server
				If Instr(ssDB.filePath,STR_BARRA_INV)>0 Then
					sPath=Strleftback(ssDB.filePath,STR_BARRA_INV)	
				End If
				sPath=Strleft(ssDB.FilePath,ssDB.FileName)
				sFile=NOMBRE_MODULO & Cstr(Year(Today)) & "_" & Cstr(sNumBase) & ".nsf"
				'	Msgbox "#################################### : " & sFile
			Else	
				server=db.server
				sPath=Strleft(db.FilePath,db.FileName)
			'	Msgbox "####################################   3"
				'Msgbox "	db no es NULL ..... server: " & server & " y sPath: " & sPath
			End If
			sFile=NOMBRE_MODULO & Cstr(Year(Today)) & "_" & Cstr(sNumBase) & ".nsf"				
			
			If sPath<>"" Then
				Set db=template.Createcopy(server,sPath  & sFile)		
			Else
				Set db=template.Createcopy(server,sFile)
				'Msgbox "####################################   4"
			End If			
			If db.isOpen Then
				'Msgbox "####################################   5"
				db.Title= NOMBRE_MODULO & " " & Cstr(Year(Today)) & " " & Cstr(sNumBase)
				'Agregar a la configuracion
				Dim vIns As New Vector(0),nColOrd As Integer,serverName As NotesName
				Dim sdoc As NotesDocument
				Dim paths As String
				
				Set serverName=New notesname(db.server)
				nColOrd=1
				c.InsertarLineaInterop CLAVE_DBAUDITORIA & Cstr(Year(Today)) & "_" & sNumBase,c.HostByKey(CLAVE_DBAUDITORIA_TEMPLATE),serverName.Abbreviated,db.filepath
				c.addAuditoriaDate CLAVE_DBAUDITORIA & Cstr(Year(Today))  & "_" & sNumBase,Now
				c.save
'				notificarBaseCreada c.Administradores.values
				
			Else
				'Msgbox "####################################   6"
				Error ERROR_DB_NOT_CREATED,MSG_ERROR_DB_NOT_CREATED & " " & sPath & STR_BARRA_INV & sFile
			End If	
		Else
			'Msgbox "####################################   7"
			Error ERROR_DB_NOT_CREATED,MSG_ERROR_DB_NOT_CREATED  & " " & NOMBRE_MODULO
		End If
		Exit Sub
errorHandler:
		Msgbox "crear Base ---> ERROR:" & Err & " "& Erl & " " & Error$
		'Call RegistrarYGenerarError(NOMBRE_APLICACION, " Clase Auditoria - CrearBase ", "")
		Call RegistrarYGenerarError2(Err, Error$, NOMBRE_APLICACION, "Clase Auditoria - CrearBase" , Erl, "")
		Exit Sub
	End Sub	
	
'******************************************************************************************************************	
	
	Private Function maxBase(c As ConfDocumentos,sClave As String) As Integer
		On Error Goto errorHandler
		Dim vClaves As New Vector(0), nTmp As Integer,sNum As String
		
		Set vClaves=c.ClaveInter
		maxBase=MAX_NUMERO_BASE_NOT_FOUND
		'Msgbox "Las cleve de la interop son : " & vClaves.toString(", ")
		Forall cl In vClaves.values
			'Msgbox "Lo que comparo es: " & Ucase(Strleft(Cstr(cl),"_")) & " = " & Ucase(CLAVE_DBAUDITORIA & Cstr(Year(Today)))
			If Ucase(Strleft(Cstr(cl),"_"))=Ucase(CLAVE_DBAUDITORIA & Cstr(Year(Today))) Then
				sNum=Strright(Cstr(cl),"_")
				If Isnumeric(sNum) Then
					nTmp=Cint(sNum)
					If nTmp>maxBase Then
						maxBase=nTmp
					End If
				End If	
			End If
		End Forall	
		Exit Function
errorHandler:
		'Call RegistrarYGenerarError(NOMBRE_APLICACION, " Clase Auditoria - MaxBase ", "")
		Call RegistrarYGenerarError2(Err, Error$, NOMBRE_APLICACION, "Clase Auditoria - MaxBase" , Erl, "")
		Exit Function
	End Function
	
'******************************************************************************************************************	
'******************************************************************************************************************	
'Públicas
	
	Public Sub new()
		'Se busca la base que corresponde abrir. La que tiene el máximo índice de clave
		'Si no se encuentra una, se la crea. Si se encuentra una, se verifica si no se 
		'cumplió el tiempo de vida de la misma. En caso afirmativo, se crea una.
		On Error Goto errorHandler
		Dim c As New ConfDocumentos, srv As String, path As String
		Dim nMax As Integer ,sClave As String
		Dim session As New NotesSession
		flagCreate = False
		nMax=maxBase(c,CLAVE_DBAUDITORIA)
	
		'Msgbox "===============================================Nuestro numero max es: "& nMax
		If nMax=MAX_NUMERO_BASE_NOT_FOUND Then
			crearBase c,NUMERO_PRIMER_BASE
			nMax=NUMERO_PRIMER_BASE
		Else
			sClave=CLAVE_DBAUDITORIA & Cstr(Year(Today)) & "_" & Cstr(nMax)
'			srv = c.ObtenerNombreServidor(sClave)
'			path = c.BaseDeDatos(sClave)
			Set db = c.ReferenciarBaseDeDatos(sClave)
			'If Not db.isOpen (session.CurrentDatabase.Server,db.FilePath) Then
			'	Call db.Open(session.CurrentDatabase.Server,db.FilePath)
			'	Error ERROR_DB_NOT_OPEN,MSG_ERROR_DB_NOT_OPEN & " - " & NOMBRE_APLICACION
			'Else
			If tiempoCumplido(c,db.Created) Then 'sClave) Then 'Sacar de Configuracion c
				crearBase c,nMax+1
			End If
			'End If			
		End If		
		
		Exit Sub
errorHandler:
		Msgbox "new auditoria ---> ERROR:" & Err & " "& Erl & " " & Error$
		'Call RegistrarYGenerarError(NOMBRE_APLICACION, " New ", "")
		Call RegistrarYGenerarError2(Err, Error$, NOMBRE_APLICACION, "Clase Auditoria - New" , Erl, "")
		Exit Sub	
	End Sub
	
'******************************************************************************************************************	
	
	Public Sub registrar()
	'Genera un documento de registro de operacion en la base
		On Error Goto errorHandler
		
		Dim doc As notesdocument
		Set doc=New notesdocument(db)
		doc.form=FORM_OPERACION
		doc.nbUsuario=Me.usuario
		doc.sOperacion=Me.operacion
		doc.sNroDocumento=Me.numeroDoc
		doc.sTipoDocumento=Me.tipoDoc
		doc.sParamOperacion = Me.paramOperacion
		doc.fFecha=Now
		doc.save True,False
		If flagCreate Then
			db.UpdateFTIndex (True)
			flagCreate = False
		End If
		Exit Sub
errorhandler:
		'Call RegistrarYGenerarError(NOMBRE_APLICACION, " Registrar ", "")
		Call RegistrarYGenerarError2(Err, Error$, NOMBRE_APLICACION, "Clase Auditoria - registrar" , Erl, "")
		Exit Sub
	End Sub
	
'******************************************************************************************************************	
	
	Public Property Get usuario As String
		usuario=sUsuario		
	End Property
	
'******************************************************************************************************************	
	
	Public Property Set usuario As String
		sUsuario=usuario
	End Property
	
	'******************************************************************************************************************	
	
	Public Property Get operacion As String
		operacion=sOperacion	
	End Property
	
	'******************************************************************************************************************	
	
	Public Property Set operacion As String
		sOperacion=operacion
	End Property
	
'******************************************************************************************************************	
	
	Public Property Get numeroDoc As String
		numeroDoc=sNroDocumento
	End Property
	
'******************************************************************************************************************	
	
	Public Property Set numeroDoc As String
		sNroDocumento=numeroDoc
	End Property
	
	'******************************************************************************************************************	
	
	Public Property Get tipoDoc As String
		tipoDoc=sTipoDocumento
	End Property
	
'******************************************************************************************************************	
	
	Public Property Set tipoDoc As String
		sTipoDocumento=tipoDoc
	End Property
'******************************************************************************************************************	
	
	Public Property Get paramOperacion As String
		paramOperacion=sParamOperacion
	End Property
	
'******************************************************************************************************************	
	
	Public Property Set paramOperacion As String
		sParamOperacion=paramOperacion
	End Property
	
	
End Class