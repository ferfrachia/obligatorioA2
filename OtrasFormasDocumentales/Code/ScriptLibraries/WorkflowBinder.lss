'++LotusScript Development Environment:2:5:(Options):0:74
Option Declare
Use "VectorClass 2.05" 

Use "FuncionesGenerales"
Use "IGDocConfig"
''Use "Configuracion Formularios"

'***************************	CLASE USUARIO	************************************************
'*	INTERFASE
'*
'*		New(byval IdDocInstancia as string, byval IdDocDatos as String)
'*			Constructor de la clase
'*
'*	PROPIEDADES
'*	
'*		
'*************************************************************************************************
'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Public Class WorkflowBinder
Declare Private Function replaceSubstring(Byval x As String, Byval repfrom As String, Byval repto As String, _
Byval caseflag As Integer) As String

'++LotusScript Development Environment:2:5:(Declarations):0:10
'Constantes privadas

Private Const CLAVE_BASE_MOTORWORKFLOW												= "MOTOR"
Private Const CLAVE_BASE_DATOS												= "FORMULARIOS"


'campos
Private Const CAMPO_ID_DOCINSTANCIA												= "idWorkflow"
Private Const CAMPO_ID_DOCDATOS										= "DocDatosId"
Private Const CAMPO_CLAVE_DOCDATOS								="ClaveDBDatos"

Private Const VISTA_DOC_INSTANCIAS										="InstanciaPorId"
Private Const VISTA_DOC_DATOS										="DocDatosPorID"
Private Const NOMBRE_FORMULARIO_INSTANCIA                                         ="InstanciaWorkflow"

'******************************************************************************************************************
Public Class WorkflowBinder
	
	
	'variables privadas
	Public DocInstancia As NotesDocument
	Public DocDatos As NotesDocument
	Private c As IGDocConfig
	
	Private dbMotorWorkflow As NotesDatabase
	Private dbDatos As NotesDatabase
	Private vDocInstancias As NotesView
	Private vDocDatos As NotesView
	Private claveDBDatos As String
	
	
	
'*******************************************************************************************************************
	
'Constructor 
	
	
	
'	Public Sub new(Byval IDDocInstancia As String, Byval IDDocDatos As String)
'		On Error Goto HANDLER
'		claveDBDatos = CLAVE_BASE_DATOS
'	
'	
'		If cforms Is Nothing Then Set cforms= New ConfigForms
'	
'		If c Is Nothing Then Set c = New IGDocConfig
'	
'		Set dbDatos = cforms.ReferenciarBaseDeDatos(CLAVE_BASE_DATOS)
'		Set dbMotorWorkflow = cforms.ReferenciarBaseDeDatos(CLAVE_BASE_MOTORWORKFLOW)
'	
'		If dbDatos Is Nothing Then _
'		Error ERROR_DB_NOT_OPEN, MSG_ERROR_DB_NOT_OPEN + " " + CLAVE_BASE_DATOS
'	
'		If dbMotorWorkflow Is Nothing Then _
'		Error ERROR_DB_NOT_OPEN, MSG_ERROR_DB_NOT_OPEN + " " + CLAVE_BASE_MOTORWORKFLOW
'	
'		Set vDocInstancias = dbMotorWorkflow.GetView(VISTA_DOC_INSTANCIAS)
'		Set vDocDatos = dbDatos.GetView(VISTA_DOC_DATOS)
'	
'		If vDocInstancias Is Nothing Then _
'		Error ERROR_VIEW_NOT_FOUND, MSG_ERROR_VIEW_NOT_FOUND + " " + VISTA_DOC_INSTANCIAS
'	
'		If vDocDatos Is Nothing Then _
'		Error ERROR_VIEW_NOT_FOUND, MSG_ERROR_VIEW_NOT_FOUND + " " + VISTA_DOC_DATOS
'	
'		If IDDocDatos ="" Then
'			If IDDocInstancia ="" Then
'				Error 700, "Parametros Incorrectos ("""","""")"
'			Else
'				Set DocInstancia= vDocInstancias.GetDocumentByKey(IDDocInstancia)
'				If DocInstancia Is Nothing Then Error 701,"No existe la instancia ("+IDDocInstancia+")"
'	
'				Set DocDatos= vDocDatos.GetDocumentByKey(DocInstancia.GetItemValue(CAMPO_ID_DOCDATOS)(0))
'				If Docdatos Is Nothing Then Error 702,"No existe el formulario correspondiente a la instancia("+IDDocInstancia+")"	
'			End If
'		Else
'			Set DocDatos= vDocDatos.GetDocumentByKey(IDDocDatos)
'			If Docdatos Is Nothing Then Error 702,"No existe el formulario correspondiente a la instancia("+IDDocDatos+")"	
''''			If Docdatos Is Nothing Then Exit Sub
'	
'			Set DocInstancia= vDocInstancias.GetDocumentByKey(Docdatos.GetItemValue(CAMPO_ID_DOCINSTANCIA)(0))
'	
'		End If
'	
'	
'		Exit Sub
'HANDLER:
'		Error 80, Err & "WF, en l√≠nea: " & Erl & "-" + Error$
'		Call RegistraryGenerarError(NOMBRE_APLICACION,"WorkFlowBinder - Constructor","")
'		Exit Sub
'	End Sub	
	
'******************************************************************************************************************	
	
	
	Public Sub crearInstancia() 
	' Si no existe el documento instancia de este binder este metodo lo crea
		On Error Goto HANDLER
		If Not DocInstancia Is Nothing Then Error 706,"Ya existe el documentoInstancia"
		Set  DocInstancia=dbMotorWorkflow.CreateDocument()
		DocInstancia.form=NOMBRE_FORMULARIO_INSTANCIA
		'Por defecto toma la clave de formularios
		If claveDBDatos="" Then claveDBDatos=CLAVE_BASE_DATOS
		Call DocInstancia.ReplaceItemValue(CAMPO_CLAVE_DOCDATOS	,claveDBDatos)
		Msgbox "CreateInstancia:" + Docdatos.GetItemValue(CAMPO_ID_DOCDATOS)(0)
		Call DocInstancia.ReplaceItemValue(CAMPO_ID_DOCDATOS	,Docdatos.GetItemValue(CAMPO_ID_DOCDATOS)(0))
		Call DocInstancia.ReplaceItemValue(CAMPO_ID_DOCINSTANCIA	,DocInstancia.UniversalID)
		If Not DocInstancia.Save(True,True) Then
			Error 704,"No se pudo crear el documento instancia"
		End If
		Call DocDatos.ReplaceItemValue(CAMPO_ID_DOCINSTANCIA	,DocInstancia.UniversalID)
		Call DocDatos.ReplaceItemValue(CAMPO_ID_DOCDATOS	,Docdatos.GetItemValue(CAMPO_ID_DOCDATOS)(0))
		If Not DocDatos.Save(True,True) Then
			Error 704,"No se pudo almacenar el formulario de datos"
		End If
		Exit Sub
HANDLER:
		Call RegistraryGenerarError(NOMBRE_APLICACION,"WorkflowBinder - crearInstancia","")
		Exit Sub
	End Sub
	
	
'******************************************************************************************************************		
	Public Function GetIdWorkflow As String
	' Retorna el idworkflow  
		On Error Goto HANDLER
		GetIdWorkflow=DocDatos.GetItemValue(CAMPO_ID_DOCINSTANCIA)(0)
		
		Exit Function
HANDLER:
		Call RegistraryGenerarError(NOMBRE_APLICACION,"WorkflowBinder - GetIdWorkflow","")
		Exit Function
	End Function
	
'******************************************************************************************************** 
	Public Function GetIdDatos As String
	' Retorna true si el tipo de parametro es numerico  
		On Error Goto HANDLER
		GetIdDatos=DocInstancia.GetItemValue(CAMPO_ID_DOCDATOS)(0)
		
		Exit Function
HANDLER:
		Call RegistraryGenerarError(NOMBRE_APLICACION,"WorkflowBinder - GetIdDatos","")
		Exit Function
	End Function
'******************************************************************************************************************		
	
End Class
'++LotusScript Development Environment:2:1:replaceSubstring:2:8
Private Function replaceSubstring(Byval x As String, Byval repfrom As String, Byval repto As String, _
Byval caseflag As Integer) As String
	Dim pos As Long, lastpos As Long
	lastpos = 1
	Do
		pos = Instr(lastpos, x, repfrom, caseflag)
		If pos = 0 Then Exit Do
		replaceSubstring = replaceSubstring & Mid$(x, lastpos, pos-lastpos) & repto
		lastpos = pos + Len(repfrom)
	Loop
	replaceSubstring = replaceSubstring & Mid$(x, lastpos)
End Function