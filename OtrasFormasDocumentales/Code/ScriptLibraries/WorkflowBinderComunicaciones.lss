'++LotusScript Development Environment:2:5:(Options):0:74
Option Declare
Use "VectorClass 2.05" 

Use "FuncionesGenerales"
Use "IGDocConfig"
Use "Configuracion Comunicaciones"
Use "WorkflowBinder"



'***************************	CLASE USUARIO	************************************************
'*	INTERFASE
'*
'*		New(byval IdDocInstancia as string, byval IdDocDatos as String)
'*			Constructor de la clase
'*
'*	PROPIEDADES
'*	
'*		
'*************************************************************************************************
'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Public Class WorkflowBinderComunicaciones As WorkflowBinder
Declare Private Function replaceSubstring(Byval x As String, Byval repfrom As String, Byval repto As String, _
Byval caseflag As Integer) As String

'++LotusScript Development Environment:2:5:(Declarations):0:10
'Constantes privadas

Private Const CLAVE_BASE_MOTORWORKFLOW												= "MOTOR"
Private Const CLAVE_BASE_DATOS												= "COMUNICACIONES"


'campos
Private Const CAMPO_ID_DOCINSTANCIA												= "idWorkflow"
Private Const CAMPO_ID_DOCDATOS										= "DocDatosId"

Private Const VISTA_DOC_INSTANCIAS										="InstanciaPorId"
Private Const VISTA_DOC_DATOS										="DocDatosPorID"
Private Const NOMBRE_FORMULARIO_INSTANCIA                                         ="InstanciaWorkflow"

'******************************************************************************************************************
Public Class WorkflowBinderComunicaciones As WorkflowBinder
	
	'variables privadas
	'Public DocInstancia As NotesDocument
	'Public DocDatos As NotesDocument
	'Private c As IGDocConfig
	Private cComunicaciones As ConfigComunicaciones
	'Private dbMotorWorkflow As NotesDatabase
	'Private dbDatos As NotesDatabase
	'Private vDocInstancias As NotesView
	'Private vDocDatos As NotesView
	
	
	
'*******************************************************************************************************************
	
'Constructor 
	Public Sub new(Byval IDDocInstancia As String, Byval IDDocDatos As String)
		On Error Goto HANDLER
		
		If cComunicaciones Is Nothing Then Set cComunicaciones= New ConfigComunicaciones
		
		If c Is Nothing Then Set c = New IGDocConfig
		
		Set dbDatos = cComunicaciones.ReferenciarBaseDeDatos(CLAVE_BASE_DATOS)
		Set dbMotorWorkflow = cComunicaciones.ReferenciarBaseDeDatos(CLAVE_BASE_MOTORWORKFLOW)
		
		If dbDatos Is Nothing Then _
		Error ERROR_DB_NOT_OPEN, MSG_ERROR_DB_NOT_OPEN + " " + CLAVE_BASE_DATOS
		
		If dbMotorWorkflow Is Nothing Then _
		Error ERROR_DB_NOT_OPEN, MSG_ERROR_DB_NOT_OPEN + " " + CLAVE_BASE_MOTORWORKFLOW
		
		Set vDocInstancias = dbMotorWorkflow.GetView(VISTA_DOC_INSTANCIAS)
		Set vDocDatos = dbDatos.GetView(VISTA_DOC_DATOS)
		
		If vDocInstancias Is Nothing Then _
		Error ERROR_VIEW_NOT_FOUND, MSG_ERROR_VIEW_NOT_FOUND + " " + VISTA_DOC_INSTANCIAS
		
		If vDocDatos Is Nothing Then _
		Error ERROR_VIEW_NOT_FOUND, MSG_ERROR_VIEW_NOT_FOUND + " " + VISTA_DOC_DATOS
		
		If IDDocDatos ="" Then
			If IDDocInstancia ="" Then
				Error 700, "Parametros Incorrectos ("""","""")"
			Else
				Set DocInstancia= vDocInstancias.GetDocumentByKey(IDDocInstancia)
				If DocInstancia Is Nothing Then Error 701,"No existe la instancia ("+IDDocInstancia+")"
				
				Set DocDatos= vDocDatos.GetDocumentByKey(DocInstancia.GetItemValue(CAMPO_ID_DOCDATOS)(0))
				If Docdatos Is Nothing Then Error 702,"No existe el formulario correspondiente a la instancia("+IDDocInstancia+")"	
			End If
		Else
			Set DocDatos= vDocDatos.GetDocumentByKey(IDDocDatos)
			If Docdatos Is Nothing Then Error 702,"No existe el formulario correspondiente a la instancia("+IDDocDatos+")"	
			
			
			Set DocInstancia= vDocInstancias.GetDocumentByKey(Docdatos.GetItemValue(CAMPO_ID_DOCINSTANCIA)(0))
			
			claveDBDatos=CLAVE_BASE_DATOS
			
		End If
		
		
		Exit Sub
HANDLER:
		Error 80, Err & "WF, en l√≠nea: " & Erl & "-" + Error$
		Call RegistraryGenerarError(NOMBRE_APLICACION,"WorkFlowBinder - Constructor","")
		Exit Sub
	End Sub	
	
	
End Class
'++LotusScript Development Environment:2:1:replaceSubstring:2:8
Private Function replaceSubstring(Byval x As String, Byval repfrom As String, Byval repto As String, _
Byval caseflag As Integer) As String
	Dim pos As Long, lastpos As Long
	lastpos = 1
	Do
		pos = Instr(lastpos, x, repfrom, caseflag)
		If pos = 0 Then Exit Do
		replaceSubstring = replaceSubstring & Mid$(x, lastpos, pos-lastpos) & repto
		lastpos = pos + Len(repfrom)
	Loop
	replaceSubstring = replaceSubstring & Mid$(x, lastpos)
End Function