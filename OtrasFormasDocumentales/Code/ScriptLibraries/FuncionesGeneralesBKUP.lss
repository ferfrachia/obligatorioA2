'++LotusScript Development Environment:2:5:(Options):0:74
Option Declare
Use "ConstantesSistema" 
Use "Errores generales"
Use "ErrorHandlerClass 1.3"


%REM
FUNCIONES DISPONIBLES

Public Sub RegistrarYGenerarError(byval aplicacion as string, byval funcion as string, byval msgadic as string)
	1) Envía mail a los administradores y realiza el log del error en la base errorlog
	2) Agrega al texto del error el msgadic
	3) Genera nuevamente el error hacia arriba con igual número y texto
	Parámetros
		aplicacion: nombre de la aplicacion donde ocurre el error
		funcion: nombre detallado de la función exacta donde ocurre el error
		msgadic: mensaje adicional que quiera agregarse al mensaje de error

Public Sub ResgistrarYDesplegarError (byval aplicacion as string, byval funcion as string, byval msgadic as string)
	1) Agrega al texto del error el msgadic
	2) Despliega dicho texto de error en pantalla
	Parámetros
		aplicacion: nombre de la aplicacion donde ocurre el error
		funcion: nombre detallado de la función exacta donde ocurre el error
		msgadic: mensaje adicional que quiera agregarse al mensaje de error

%ENDREM 


'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Sub Initialize
Declare Public Sub DesplegarMsgErrorWebEdicion(Byval Err_ As Integer, Error_ As String, Byval msgAdic As String, Byval Aplicacion As String, Byval Funcion As String, Byval lineaErr As Integer)
Declare Public Sub RegistrarYGenerarError(Byval aplicacion As String,Byval funcion As String, _
Byval msgadic As String)
Declare Public Sub GenerarErrorLog2(Byval Err_ As Integer, Error_ As String, Byval msgAdic As String, _
Byval Aplicacion As String, Byval Funcion As String, Byval lineaErr As Integer, _
Byval Usuario As String)
Declare Public Sub GenerarErrorLog(Byval Err_ As Integer, Error_ As String, Byval msgAdic As String, Byval Aplicacion As String, Byval Funcion As String, Byval lineaErr As Integer)
Declare Public Sub RegistrarYGenerarError2(Byval errorNum As Integer, Byval errorDesc As String, _
Byval aplicacion As String,Byval funcion As String, Byval msgadic As String, _
Byval Usuario As String)
Declare Public Sub DesplegarMsgErrorWeb(Byval Err_ As Integer, Error_ As String, Byval msgAdic As String, Byval Aplicacion As String, Byval Funcion As String, Byval lineaErr As Integer)
Declare Public Function mySplit(Byval strIn As String,sep As String,out As Variant)
Declare Public Sub BorrarCampo(doc As NotesDocument, Byval nombre As String)
Declare Public Sub RegistraryDesplegarError(Byval aplicacion As String,Byval funcion As String,Byval msgadic As String)
Declare Public Function cambiarChar(temp As String, strBuscar As String, strCambiar As String)
Declare Public Function replaceSubstring(Byval x As String, Byval repfrom As String, Byval repto As String, _
Byval caseflag As Integer) As String
Declare Public Function URLDecode(inpString As String) As String

'++LotusScript Development Environment:2:5:(Declarations):0:10
Private loguearError As Integer

'++LotusScript Development Environment:2:2:Initialize:1:10
Sub Initialize
	
	'Inicializo el loguearError en true
	loguearError = True
	
End Sub

'++LotusScript Development Environment:2:2:DesplegarMsgErrorWebEdicion:1:8
Public Sub DesplegarMsgErrorWebEdicion(Byval Err_ As Integer, Error_ As String, Byval msgAdic As String, Byval Aplicacion As String, Byval Funcion As String, Byval lineaErr As Integer)
	'Se utiliza para desplegar el mensaje de error en la web
	
	Dim textoErr As String, texto As String, img As String
	
	
	If msgAdic <> "" Then
		textoErr = Error_+": "+msgAdic
	Else
		textoErr = Error_
	End If
	
	img = "blackdot.gif?OpenImageResource"
	texto = |
	
<html>
<head>
<style>
<!--
	
.h-errorBanner-textbg { font-family: verdana; font-weight: bold; font-size: 10pt; color: white; background-color: rgb(76,76,76) } .h-errorContent-textbg { font-family: arial; font-size: 10pt; color: black; background-color: rgb(248,248,248); background-color: rgb(240,240,240); } a.h-errorContent-textbg { color: rgb(51,0,255); text-decoration: none; }-->
</style>
</head>
<body>

<div align="center">
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<table cellSpacing="0" cellPadding="0" >
	<td>
		<table cellSpacing="0" cellPadding="0"  width=100% border="0" id="table2">
			<!-- Spacers -->
			<tr class="h-errorBanner-textbg">
				<td width="21">
				<img height="2" alt="" src=| & img & | width="21" border="0"></td>
				<td width="63">
				<img height="1" alt="" src=| & img & | width="63" border="0"></td>
				<td width="13">
				<img height="1" alt="" src=| & img & | width="13" border="0"></td>
				<td width="348">
				<img height="1" alt="" src=| & img & | width="348" border="0"></td>
				<td width="30">
				<img height="1" alt="" src=| & img & | width="30" border="0"></td>
			</tr>
			<!-- Banner -->
			<tr class="h-errorBanner-textbg">
				<td>&nbsp;</td>
				<td class="h-errorBanner-textbg" colSpan="3">Aviso del Sistema</td>
				<td>&nbsp;</td>
			</tr>
			<!-- Padding (banner) -->
			<tr class="h-errorBanner-textbg">
				<td colSpan="5">
				<img height="4" alt="" src=| & img & | width="1" border="0"></td>
			</tr>
			<!-- Padding (content) -->
			<tr class="h-errorContent-textbg">
				<td colSpan="5">
				<img height="24" alt="" src=| & img & | width="1" border="0"></td>
			</tr>
			<!-- Message content -->
			<tr class="h-errorContent-textbg">
				<!-- Set minimum height of content area -->
				<td>
				<img height="80" alt="" src=| & img & | width="1" border="0"></td>

	<td vAlign="top">
				<img height="54" alt="" src=| & "../error.gif" & | width="63" border="0"></td>
				<td><br>
&nbsp;</td>
				<!-- Insert message here -->
				<td class="h-errorContent-textbg" vAlign="top">| & textoErr & | 
				<br>
				<br>
				<a href="javascript:history.go(-1)" class="h-errorContent-textbg" >
				Volver</a>
</td>
				<td><br>
&nbsp;</td>
			</tr>
			<!-- Padding -->
			<tr class="h-errorContent-textbg">
				<td colSpan="5">
				<img height="24" alt="" src=| & img & | width="1" border="0"></td>
			</tr>
			<!-- Bottom edge -->
			<tr class="h-errorBanner-textbg">
				<td colSpan="5">
				<img height="1" alt="" src=| & img & | width="1" border="0"></td>
			</tr>
		</table>
		</td>
		<td class="h-errorBanner-textbg">
			<img  alt="" src="/" width="1" border="0">
		</td>
		</table>
	
</div>	
	
</body>
</html>
	|	
	
	Print texto
End Sub

'++LotusScript Development Environment:2:2:RegistrarYGenerarError:2:8
Public Sub RegistrarYGenerarError(Byval aplicacion As String,Byval funcion As String, _
Byval msgadic As String)
	'Función utilizada por las funciones llamadas por agentes para realizar el log del error
	'y enviarlo hacia arriba
	
	'Genero log del error
	Call GenerarErrorLog(Err,Error,msgadic,aplicacion,funcion,Erl)
	'Seteo la variable de loguearError en false porque ya se logeó acá
	loguearError = False
	'Envío el error hacia arriba, indicando el nombre de la función	
	Error Err,Error
End Sub

'++LotusScript Development Environment:2:2:GenerarErrorLog2:3:8
Public Sub GenerarErrorLog2(Byval Err_ As Integer, Error_ As String, Byval msgAdic As String, _
Byval Aplicacion As String, Byval Funcion As String, Byval lineaErr As Integer, _
Byval Usuario As String)
	'Maneja la clase ErrorHandler para enviar mail a los administradores y realizar el registro de error en la base de errorlog
	'SYSTEM_ADMIN_X y ERROR_LOG son constantes del sistema
	
	Dim send() As String
	Dim eh As ErrorHandler
	Dim textoErr As String
	
	If msgAdic <> "" Then
		textoErr = Error_+": "+msgAdic
	Else
		textoErr = Error_
	End If
	
	Redim send(0)
	
	Set eh = New ErrorHandler(Err_,textoErr,Aplicacion,Funcion,lineaErr,Usuario)
	
	'If ERROR_LOG <> "" Then
	'	Redim Preserve send(Ubound(send)+1)
	'	send(Ubound(send)) = ERROR_LOG
	'End If
	
	'Call eh.Send(send,"","")		
	
	Call eh.Registrar("")
End Sub

'++LotusScript Development Environment:2:2:GenerarErrorLog:1:8
Public Sub GenerarErrorLog(Byval Err_ As Integer, Error_ As String, Byval msgAdic As String, Byval Aplicacion As String, Byval Funcion As String, Byval lineaErr As Integer)
	'Maneja la clase ErrorHandler para enviar mail a los administradores y realizar el registro de error en la base de errorlog
	'SYSTEM_ADMIN_X y ERROR_LOG son constantes del sistema
	
	Dim send() As String
	Dim eh As ErrorHandler
	Dim textoErr As String
	
	If msgAdic <> "" Then
		textoErr = Error_+": "+msgAdic
	Else
		textoErr = Error_
	End If
	
	Redim send(0)
	
	Set eh = New ErrorHandler(Err_,textoErr,Aplicacion,Funcion,lineaErr,"")
	
'	If SYSTEM_ADMIN_1 <> "" Then
'		Redim Preserve send(Ubound(send)+1)
'		send(Ubound(send)) = SYSTEM_ADMIN_1
'	End If
'	If SYSTEM_ADMIN_2 <> "" Then
'		Redim Preserve send(Ubound(send)+1)
'		send(Ubound(send)) = SYSTEM_ADMIN_2
'	End If
'	If SYSTEM_ADMIN_3 <> "" Then
'		Redim Preserve send(Ubound(send)+1)
'		send(Ubound(send)) = SYSTEM_ADMIN_3
'	End If	
'	If SYSTEM_ADMIN_4 <> "" Then
'		Redim Preserve send(Ubound(send)+1)
'		send(Ubound(send)) = SYSTEM_ADMIN_4
'	End If	
'	If SYSTEM_ADMIN_5 <> "" Then
'		Redim Preserve send(Ubound(send)+1)
'		send(Ubound(send)) = SYSTEM_ADMIN_5
'	End If	
'	If ERROR_LOG <> "" Then
'		Redim Preserve send(Ubound(send)+1)
'		send(Ubound(send)) = ERROR_LOG
'	End If
	
'	Call eh.Send(send,"","")		
	Call eh.Registrar("")
	
End Sub

'++LotusScript Development Environment:2:2:RegistrarYGenerarError2:3:8
Public Sub RegistrarYGenerarError2(Byval errorNum As Integer, Byval errorDesc As String, _
Byval aplicacion As String,Byval funcion As String, Byval msgadic As String, _
Byval Usuario As String)
	'Función utilizada por las funciones llamadas por agentes para realizar el log del error
	'y enviarlo hacia arriba
	
	'Genero log del error
	Call GenerarErrorLog2(ErrorNum,ErrorDesc,msgadic,aplicacion,funcion,Erl,Usuario)
	'Seteo la variable de loguearError en false porque ya se logeó acá
	loguearError = False
	'Envío el error hacia arriba, indicando el nombre de la función	
	Error ErrorNum,Errordesc	
End Sub

'++LotusScript Development Environment:2:2:DesplegarMsgErrorWeb:1:8
Public Sub DesplegarMsgErrorWeb(Byval Err_ As Integer, Error_ As String, Byval msgAdic As String, Byval Aplicacion As String, Byval Funcion As String, Byval lineaErr As Integer)
	'Se utiliza para desplegar el mensaje de error en la web
	
	Dim textoErr As String, texto As String, img As String
	
	
	If msgAdic <> "" Then
		textoErr = Error_+": "+msgAdic
	Else
		textoErr = Error_
	End If
	
	img = "blackdot.gif?OpenImageResource"
	texto = |
	
<html>
<head>
<style>
<!--
	
.h-errorBanner-textbg { font-family: verdana; font-weight: bold; font-size: 10pt; color: white; background-color: rgb(76,76,76) } .h-errorContent-textbg { font-family: arial; font-size: 10pt; color: black; background-color: rgb(248,248,248); background-color: rgb(240,240,240); } a.h-errorContent-textbg { color: rgb(51,0,255); text-decoration: none; }-->
</style>
</head>
<body>

<div align="center">
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<table cellSpacing="0" cellPadding="0" >
	<td>
		<table cellSpacing="0" cellPadding="0"  width=100% border="0" id="table2">
			<!-- Spacers -->
			<tr class="h-errorBanner-textbg">
				<td width="21">
				<img height="2" alt="" src=| & img & | width="21" border="0"></td>
				<td width="63">
				<img height="1" alt="" src=| & img & | width="63" border="0"></td>
				<td width="13">
				<img height="1" alt="" src=| & img & | width="13" border="0"></td>
				<td width="348">
				<img height="1" alt="" src=| & img & | width="348" border="0"></td>
				<td width="30">
				<img height="1" alt="" src=| & img & | width="30" border="0"></td>
			</tr>
			<!-- Banner -->
			<tr class="h-errorBanner-textbg">
				<td>&nbsp;</td>
				<td class="h-errorBanner-textbg" colSpan="3">Aviso del Sistema</td>
				<td>&nbsp;</td>
			</tr>
			<!-- Padding (banner) -->
			<tr class="h-errorBanner-textbg">
				<td colSpan="5">
				<img height="4" alt="" src=| & img & | width="1" border="0"></td>
			</tr>
			<!-- Padding (content) -->
			<tr class="h-errorContent-textbg">
				<td colSpan="5">
				<img height="24" alt="" src=| & img & | width="1" border="0"></td>
			</tr>
			<!-- Message content -->
			<tr class="h-errorContent-textbg">
				<!-- Set minimum height of content area -->
				<td>
				<img height="80" alt="" src=| & img & | width="1" border="0"></td>

	<td vAlign="top">
				<img height="54" alt="" src=| & "error.gif" & | width="63" border="0"></td>
				<td><br>
&nbsp;</td>
				<!-- Insert message here -->
				<td class="h-errorContent-textbg" vAlign="top">| & textoErr & | 
				<br>
				<br>
				<a href="javascript:history.go(-1)" class="h-errorContent-textbg" >
				Volver</a>
</td>
				<td><br>
&nbsp;</td>
			</tr>
			<!-- Padding -->
			<tr class="h-errorContent-textbg">
				<td colSpan="5">
				<img height="24" alt="" src=| & img & | width="1" border="0"></td>
			</tr>
			<!-- Bottom edge -->
			<tr class="h-errorBanner-textbg">
				<td colSpan="5">
				<img height="1" alt="" src=| & img & | width="1" border="0"></td>
			</tr>
		</table>
		</td>
		<td class="h-errorBanner-textbg">
			<img  alt="" src="/" width="1" border="0">
		</td>
		</table>
	
</div>	
	
</body>
</html>
	|	
	
	Print texto
	
	
End Sub

'++LotusScript Development Environment:2:1:mySplit:1:8
Public Function mySplit(Byval strIn As String,sep As String,out As Variant)
	'devuelve en out un array con los items contenidos en strIn y separados por sep
	'EN R6 existe la función Split que la sustituye!!!
	
	Dim indice As Integer,item As String
	
	Redim out(0 To 0)
	out(0)=""
	indice=0
	While Instr(strIn,sep)<>0
		item =Strleft(strIn,sep)
		If item <> "" Then
			Redim Preserve out(0 To indice)
			out(indice)=item
			indice = indice + 1	
		End If		
		strIn =Strright(strIn,sep)
	Wend
	If strIn<>"" Then
		Redim Preserve out(0 To indice)
		out(indice)=strIn
	End If
End Function


'++LotusScript Development Environment:2:2:BorrarCampo:1:8
Public Sub BorrarCampo(doc As NotesDocument, Byval nombre As String)
'Si el doc tiene el un campo nombre lo borra
	
	On Error Goto HANDLER	
	
	Dim item As NotesItem
	
	Set item = doc.GetFirstItem(nombre)
	If doc.HasItem(nombre) Then
		Call item.Remove
	End If
	
	Exit Sub
HANDLER:
	Call RegistrarYGenerarError(NOMBRE_APLICACION,"Función General - BorrarCampo","")
	Exit Sub
End Sub

'++LotusScript Development Environment:2:2:RegistraryDesplegarError:1:8
Public Sub RegistraryDesplegarError(Byval aplicacion As String,Byval funcion As String,Byval msgadic As String)
	'Función utilizada por los Initialize de los agentes para realizar el log del error 
	'(si aún no se hizo) y desplegarlo
	
	If loguearError Then
	'Genero log del error
		Call GenerarErrorLog(Err, Error,msgadic,aplicacion,funcion,Erl)
	End If
	'Despliego mensaje de error
	Call DesplegarMsgErrorWeb(Err, Error,msgadic,aplicacion,funcion,Erl)
	
End Sub

'++LotusScript Development Environment:2:1:cambiarChar:1:8
Public Function cambiarChar(temp As String, strBuscar As String, strCambiar As String)
	On Error Goto HANDLER
	
	While Instr(temp,strBuscar) >0
		temp = Strleft(temp,strBuscar) + strCambiar +Strright(temp,strBuscar)
	Wend
	cambiarChar =temp
	
	Exit Function
HANDLER:
	Call RegistrarYGenerarError(NOMBRE_APLICACION,"Función General - cambiarChar","")
	Exit Function
End Function

'++LotusScript Development Environment:2:1:replaceSubstring:2:8
Public Function replaceSubstring(Byval x As String, Byval repfrom As String, Byval repto As String, _
Byval caseflag As Integer) As String
'Reemplaza el string repfrom por repto en el texto x	
	
	Dim pos As Long, lastpos As Long
	lastpos = 1
	Do
		pos = Instr(lastpos, x, repfrom, caseflag)
		If pos = 0 Then Exit Do
		replaceSubstring = replaceSubstring & Mid$(x, lastpos, pos-lastpos) & repto
		lastpos = pos + Len(repfrom)
	Loop
	replaceSubstring = replaceSubstring & Mid$(x, lastpos)
End Function


'++LotusScript Development Environment:2:1:URLDecode:1:8
Public Function URLDecode(inpString As String) As String
	On Error Goto HANDLER	
	
	Dim temp As String
	Dim hexValue As String
	Dim ch As String
	Dim pos As Integer
	Dim newPos As Integer
	' First, replace any plus signs with spaces
	temp = inpString
	
	'Acéntos minúsculas
	
	temp=cambiarChar(temp,"%C3%A1","á")
	temp=cambiarChar(temp,"%C3%A9","é")
	temp=cambiarChar(temp,"%C3%AD","í")
	temp=cambiarChar(temp,"%C3%B3","ó")
	temp=cambiarChar(temp,"%C3%BA","ú")
	
	'Acéntos MAYÚSCULAS
	temp=cambiarChar(temp,"%C3%81","Á")
	temp=cambiarChar(temp,"%C3%89","É")
	temp=cambiarChar(temp,"%C3%8D","Í")
	temp=cambiarChar(temp,"%C3%93","Ó")
	temp=cambiarChar(temp,"%C3%9A","Ú")	
	
	
	temp=cambiarChar(temp,"%C3%91","Ñ")
	temp=cambiarChar(temp,"%C3%B1","ñ")
	temp=cambiarChar(temp,"%F1","ñ")
	
	urlDecode = temp
	
	Exit Function
HANDLER:
	Call RegistrarYGenerarError(NOMBRE_APLICACION,"Función General - URLDecode","")
	Exit Function
End Function