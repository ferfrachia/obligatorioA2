'++LotusScript Development Environment:2:5:(Options):0:74
'********************************************************************************************************
'							Actualizaciones
'********************************************************************************************************
%REM
	1.0	20/08/2008	Modificado por: Alejandro Goñi
		Versión base, no se modificó la que ya existía

%END REM

Option Declare

Use "ClaseIndice"
Use "Configuracion Formularios"

'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Public Class IndiceFormularios As Indice

'++LotusScript Development Environment:2:5:(Declarations):0:10
Public Class IndiceFormularios As Indice
	Public Sub New(), Indice(Ucase("Formularios"))
		
	End Sub
	
	
	Public Sub ActualizarIndiceFormularios(clave As String)
		On Error Goto HANDLER
		Dim session As New NotesSession
		Dim dbForms As NotesDatabase
		Dim dbAdmin As NotesDatabase
		Dim dbOrgan As NotesDatabase
		Dim vTodos As NotesView
		Dim vTiposForm As NotesView
		Dim vUnidades As NotesView
		Dim docForm As NotesDocument
		Dim docTipoForm As NotesDocument
		Dim docIndice As NotesDocument
		Dim docUnidad As NotesDocument
		Dim conf As ConfigForms
		Dim vCampos As Vector
		Dim vCampos2 As Vector
		Dim unidad As String
		Dim año As String
		Dim unid As String
		Dim columnas As New Vector(0)
		
		'Obtengo el documento con el formulario
		Set conf = New ConfigForms
		Set dbForms = conf.ReferenciarBaseDeDatos(CLAVE_DBFORMULARIOS)
		Set vTodos = dbForms.GetView("TodosXNum")
		Set docForm = vTodos.GetDocumentByKey(clave)
		If docForm Is Nothing Then
			Exit Sub
		End If
		
		'Obtengo la vista con los tipos de formulario
		Set dbAdmin = conf.ReferenciarBaseDeDatos(CLAVE_DBADMINCONF)
		Set vTiposForm = dbAdmin.GetView("vDefFormxCodigo")
		Set docTipoForm = vTiposForm.GetDocumentByKey(docForm.GetItemValue("codigo")(0))
		
		'Cargo los campos necesarios del índice
		clave = docForm.GetItemValue("numero")(0)
		unidad = docForm.GetItemValue("UnidadActual")(0)
		año = Cstr(Year(docForm.Created))
		
		columnas.Values=docTipoForm.GetItemValue("sRazonesColumna")
		
		'Actualizo el índice
		Set vCampos = New Vector(0)
		Call vCampos.insertElement("sEstado", vCampos.CantElem+1)
		Call vCampos.insertElement("Seccion", vCampos.CantElem+1)
		Call vCampos.insertElement("FechasEnvio", vCampos.CantElem+1)
		Call vCampos.insertElement("sReservadoPor", vCampos.CantElem+1)
		Call vCampos.insertElement("fFinalizacion", vCampos.CantElem+1)
		Call vCampos.insertElement("sUsuarioFin", vCampos.CantElem+1)
		Call vCampos.insertElement("UnidadActual", vCampos.CantElem+1)
		Call vCampos.insertElement("UnidadAnterior", vCampos.CantElem+1)
		Call vCampos.insertElement("sRazonesColumna", vCampos.CantElem+1)
		Call vCampos.insertElement("usuariosParaFirmar", vCampos.CantElem+1)
		Set vCampos2 = New Vector(0)
		Call vCampos2.insertElement("sNombre", vCampos2.CantElem+1)
		unid = ActualizarIndiceDocs(clave, unidad, año, docForm, vCampos, docTipoForm, vCampos2)
		
		'Actualizo los nombres de unidades
		Set docIndice = session.CurrentDatabase.GetDocumentByUNID(unid)
		
		Set dbOrgan = conf.ReferenciarBaseDeDatos(CLAVE_DBORGANIZACION)
		Set vUnidades = dbOrgan.GetView("BusquedaUnixNro")
		Set docUnidad = vUnidades.GetDocumentByKey(docForm.GetItemValue("UnidadAnterior")(0))
		If Not docUnidad Is Nothing Then
			Call docIndice.ReplaceItemValue("nombreUnidadAnterior", docUnidad.GetItemValue("sUnidad")(0))
		End If
		Set docUnidad = vUnidades.GetDocumentByKey(docForm.GetItemValue("UnidadActual")(0))
		If Not docUnidad Is Nothing Then
			Call docIndice.ReplaceItemValue("nombreUnidadActual", docUnidad.GetItemValue("sUnidad")(0))
		End If
		Call docIndice.Save(False, False)
		
		Exit Sub
HANDLER:
		Msgbox "ClaseIndiceFormularios: " & Erl & " " & Error$
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase Indice - Método ActualizarIndice","")
		Exit Sub
	End Sub
End Class