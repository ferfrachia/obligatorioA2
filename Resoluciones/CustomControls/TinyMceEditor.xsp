<?xml version="1.0" encoding="UTF-8"?>
<xp:view xmlns:xp="http://www.ibm.com/xsp/core">

	







	<xp:this.resources>
		<xp:script src="/TinyMceScripts.jss" clientSide="false"></xp:script>
	</xp:this.resources>
	
	
	
	
	<xp:text escape="false" id="computedField1">
		<xp:this.value><![CDATA[#{javascript:if(requestScope.XPDEV_DTM_LoadOnce==null){
requestScope.XPDEV_DTM_LoadOnce="Y";
var path="tiny_mce/"
if(compositeData.TinyMcePath!=null){
	if(@Right(compositeData.TinyMcePath,1)!="/"){
		path=compositeData.TinyMcePath+"/"
	}else{
		path=compositeData.TinyMcePath
	}
}
return "<script type=\"text/javascript\" src=\"/"+path+"tiny_mce.js\"></script>"
}
}]]></xp:this.value>
	</xp:text>
	<xp:text escape="true" id="computedField2">
		<xp:this.value><![CDATA[#{javascript:var TinyMceBody:com.ibm.xsp.component.xp.XspInputTextarea = getComponent("TinyMceBody");
var id=getClientId(TinyMceBody.getId())
var name=compositeData.RichTextFieldName
XPDEV_DTM_StoreClientId(id,name)
return("")}]]></xp:this.value>
	</xp:text>

	<xp:scriptBlock id="scriptBlock1">
		<xp:this.value><![CDATA[var tinymce_temp=function(){
try{
var type="#{javascript:compositeData.Type}"

switch(type){
case "Simple":
tinyMCE.init({mode : "exact", elements : "#{id:TinyMceBody}",theme : "simple"});
break;
case "Advanced":
tinyMCE.init({mode : "exact", elements : "#{id:TinyMceBody}",
theme : "advanced",
        plugins : "autolink,lists,spellchecker,pagebreak,style,layer,table,save,advhr,advimage,advlink,emotions,iespell,inlinepopups,insertdatetime,preview,media,searchreplace,print,contextmenu,paste,directionality,fullscreen,noneditable,visualchars,nonbreaking,xhtmlxtras,template",

        // Theme options
        theme_advanced_buttons1 : "bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,|,styleselect,formatselect,fontselect,fontsizeselect",
        theme_advanced_buttons2 : "cut,copy,paste,pastetext,pasteword,|,search,replace,|,bullist,numlist,|,outdent,indent,blockquote,|,undo,redo,|,link,unlink,anchor,image,cleanup,help,code,|,insertdate,inserttime,preview,|,forecolor,backcolor",
        theme_advanced_buttons3 : "tablecontrols,|,hr,removeformat,visualaid,|,sub,sup,|,charmap,emotions,iespell,media,advhr,|,print,|,ltr,rtl,|,fullscreen",
        theme_advanced_buttons4 : "styleprops,spellchecker,|,cite,abbr,acronym,del,ins,attribs,|,visualchars,nonbreaking,template,blockquote,pagebreak",
        theme_advanced_toolbar_location : "top",
        theme_advanced_toolbar_align : "left",
        theme_advanced_resizing : true,

        // Skin options
        skin : "o2k7",
        skin_variant : "silver"
        })

break;
case "Custom":
var customstring='#{javascript:compositeData.CustomString}'
var basestring="mode : \"exact\", elements : \"#{id:TinyMceBody}\""

if(customstring==""){
tinyMCE.init(dojo.fromJson(basestring))
} else{
var combined=dojo.fromJson("{"+basestring+", "+customstring+"}")
tinyMCE.init(combined)
}

break;
default:
tinyMCE.init({mode : "exact", elements : "#{id:TinyMceBody}",theme : "simple"});
}}catch(e){
alert("error "+e.toString()+" #{id:TinyMceBody}")
}
}();

]]></xp:this.value>
	</xp:scriptBlock>

	<xp:panel id="TinyMcePanel">
		<xp:inputTextarea id="TinyMceBody" styleClass="TinyMce"
			rendered="#{javascript:currentDocument.isEditable()}"
			required="${javascript:return compositeData.RequiredField}"
			disableClientSideValidation="${javascript:return compositeData.DisableClientValidation}">

			<xp:this.validators>
				<xp:validateRequired
					message="${javascript:return compositeData.RequiredMessage}">
				</xp:validateRequired>
			</xp:this.validators>
			<xp:this.value><![CDATA[#{viewScope[compositeData.RichTextFieldName]}]]></xp:this.value>
		</xp:inputTextarea>
		<xp:br></xp:br>
		<xp:text escape="false" id="computedField3"
			value="#{viewScope[compositeData.RichTextFieldName]}">
		<xp:this.rendered><![CDATA[#{javascript:!currentDocument.isEditable()

}]]></xp:this.rendered></xp:text>
		<xp:br></xp:br>
		<xp:br></xp:br>
		</xp:panel>
	
	<xp:eventHandler event="onClientLoad" submit="true"
		refreshMode="norefresh"></xp:eventHandler></xp:view>
