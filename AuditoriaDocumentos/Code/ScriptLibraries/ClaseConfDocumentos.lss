'++LotusScript Development Environment:2:5:(Options):0:74
Option Public
Option Declare

Use "NumeradorClient"
Use "FuncionesGenerales"
Use "VectorClass 2.05"
Use "BasesPorCantidad"



'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Public Class ConfDocumentos

'++LotusScript Development Environment:2:5:(Declarations):0:10
'NOMBRE DOCUMENTO DE PERFIL
Private Const NOMBRE_DOC_PERFIL				= "ConfDocumentos"
Private Const NOMBRE_DOC_PERFIL_IGDOC			= "IGDocConfig"
Private Const NOMBRE_APLICACION			= "Documentos electrónicos"

' CONSTANTES CON LOS NOMBRES DE LOS CAMPOS
'configuracion general
Private Const CAMPO_CONFIG_PATH_DB_PDD			= "sPathDBPDD"
Private Const CAMPO_CONFIG_PATH_DB_AUDITORIA_PDD	= "sPathDBAuditoriaPDD"
Private Const CAMPO_CONFIG_PATH_DB_MOTOR_PDD		= "sPathDBMotorPDD"
Private Const CAMPO_CONFIG_HOST_SERVER			= "sHost"
Private Const CAMPO_CONFIG_TAM_MAX_ANEXOS		= "sTamMaxAnexos"
Private Const CAMPO_CONFIG_AUDITAR				= "chAuditar"
Private Const CAMPO_CONFIG_PUB_ESTRICTA			= "chPubEstricta"
Private Const CAMPO_CONFIG_PATH_NUMERACION		= "sPathDBNumeracionPDD"
Private Const CAMPO_CONFIG_CA_CERT				= "sCAcert"
Public Const CAMPO_CONFIG_RENDIMIENTOPOR		= "rRendimientoPor"
Public Const CAMPO_CONFIG_CANTMBXBASE			= "nCantMBxBase"
public Const CAMPO_CONFIG_CANTDOCXBASE			= "nCantDocxBase"
Public Const CAMPO_CONFIG_BASESCREADAS			= "sBasesCreadas"
Public Const CAMPO_CONFIG_BASESCREADASINI		= "sBasesCreadasIni"
Public Const CAMPO_CONFIG_NUMERADORES			= "sNumeradores"
Public Const CAMPO_CONFIG_NUMEROS				= "sNumeros"

'Interoperabilidad
Private Const CAMPO_CONFIG_CLAVE_INTER			= "sClaveInter"
Private Const CAMPO_CONFIG_SERVIDOR_INTER		= "sServidorInter"
Private Const CAMPO_CONFIG_HOST_INTER			= "sHostInter"
Private Const CAMPO_CONFIG_RUTA_INTER			= "sRutaInter"

'Numeracion
Private Const CAMPO_CONFIG_NUM_INCISO			= "inciso"
Private Const CAMPO_CONFIG_NUM_UNIDAD			= "uUnidad"
Private Const CAMPO_CONFIG_NUM_UNICA			= "cNumeracionUnica"
Private Const CAMPO_CONFIG_NUM_FORMATO			= "sFormato"
Private Const CAMPO_CONFIG_NUM_CLAVE_NUM		= "sClaveNum"

'Archivos
Private Const CAMPO_CONFIG_PATH_ARCHIVOS		= "sPathDBArchivosPDD"

'Auditoria
Private Const CAMPO_CONFIG_AUDITORIA_CANT_DIAS 	= "nTiempoVidaAuditoria"
Private Const CAMPO_CONFIG_AUDITORIA_CLAVE		= "sClaveCreacionAuditoria"
Private Const CAMPO_CONFIG_AUDITORIA_FECHA_C		= "dFechaCreacionAuditoria"

'WS2 Portlet
Private Const CAMPO_WSDOC_LISTA 				= "sListaCamposWSDoc"
Private Const CAMPO_WSDOC_TAGATT 				= "sTagArchAttWSDoc"
Private Const CAMPO_WSDOC_VISTA 				= "sVistaWSDoc"

'WS3 Portlet
Private Const CAMPO_WSVIS_LISTA 				= "sListaCamposWSVis"
Private Const CAMPO_WSVIS_VISTAFT 				= "sVistaFTWSVis"
Private Const CAMPO_WSVIS_VISTAVER 			= "sVistaVerWSVis"
Private Const CAMPO_WSVIS_TAMPAG 				= "nTamPagWSVis"
' valores checkbox numeracion
Private Const NUM_CHECK_TRUE					="1"
Private Const NUM_CHECK_FALSE					="0"

' FORMATO DE LA NUMERACION

'Constantes realacionadas con el formato de la numeracion
Private Const INDICADOR_DIGITO 						= "#"
Private Const INDICADOR_DIGITOS_PROPIO_NRO				= "*"

Private Const INDICADOR_INCISO						="i"
Private Const INDICADOR_UNIDAD						="u"
Private Const INDICADOR_DIGITOS_PROPIO_UNIDAD			="&"
Private Const INDICADOR_DIGITOS_PROPIO_INCISO			="$"

'public Const INDICADOR_AÑO_CUATRO_DIGITOS				= "yyyy"
'public Const INDICADOR_AÑO_DOS_DIGITOS					= "yy"


' CONSTANTES INTEROPERABILIDAD
Private Const KEY_INTEROP_MOTOR						= "MOTOR_PUB_DOC"
Private Const KEY_INTEROP_BASEDOC						= "BASE_DOC"
Private Const KEY_INTEROP_ARCHIVO						= "ARCHIVO_DOC"
Private Const KEY_INTEROP_NUMDOC						= "NUMERACION_DOC"
Private Const KEY_INTEROP_PORTAL						= "PORTAL"
Private Const KEY_INTEROP_ORG							= "ORGANIZACION"
Private Const KEY_INTEROP_AUDITORIA					= ""


'CONSTANTES IGDOC
Private Const CAMPO_IGDOC_PROTOCOLO					="rProtocolo"
Private Const CAMPO_IGDOC_PUERTO						="sPuerto"
Private Const CAMPO_IGDOC_HOST_SERVER					="sHost"
Private Const CAMPO_IGDOC_MODULOS_INSTALADOS				="sModulos"
Private Const CAMPO_IGDOC_EMAIL_INSTITUCIONAL			="sMail"
Private Const CAMPO_IGDOC_INSTITUCION					="sInstitucion"
Private Const CAMPO_IGDOC_PATH_SESION					="sPathSesion"
Private Const CAMPO_IGDOC_PATH_DOJO					="sPathDojo"
Private Const CAMPO_IGDOC_PATH_CERTIFICADO				="sPathCertificado"
Private Const CAMPO_IGDOC_PATH_ADMINISTRACION			="sPathAdmin"
Private Const CAMPO_IGDOC_ADMINISTRADORES				="sAdministradores"
Private Const CAMPO_IGDOC_URL_CRL						="scrlPath"
Private Const CAMPO_IGDOC_PATH_PORTAL					="sPathPortal"
Private Const CAMPO_IGDOC_DIR_INSTALACION				="sDirInstalacion"
Private Const CAMPO_IGDOC_PATH_TELEFONIA				="sPathTelefonia"
Private Const CAMPO_IGDOC_PATH_AVISOS					="sPathAvisos"
Private Const CAMPO_IGDOC_SKIN_DOJO					="sSkinDojo"
Private Const CAMPO_IGDOC_PATH_IMAGENES					="sPathImagenes"
Private Const CAMPO_IGDOC_CLAVES_COL					="sClave"
Private Const CAMPO_IGDOC_URL_COL						="sUrl"



'******************************************************************************************************************	
'*
'*									CLASS <CONFDOCUMENTOS>
'*
'******************************************************************************************************************	

'******************************************************************************************************************
Public Class ConfDocumentos
'******************************************************************************************************************	
	
'MIEMBROS PRIVADOS
	Private ses As NotesSession
	Private docConfiguracion As NotesDocument
	
'******************************************************************************************************************
' CONSTRUCTOR	
'******************************************************************************************************************
	Public Sub new()
		On Error Goto HANDLER
		
		'Referencio Variables globales
		Set ses = New NotesSession		
		
		'Se carga el documento de profile
		Set docConfiguracion = ses.CurrentDatabase.GetProfileDocument(NOMBRE_DOC_PERFIL)
		
		Exit Sub
HANDLER:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Método new","")
		Exit Sub
	End Sub
'******************************************************************************************************************
'FUNCIONES Y PROCEDIMIENTOS PRIVADOS	
'******************************************************************************************************************
	Public Property Set PathDBPDD As String
		On Error Goto handler
		'no se usa, cambio para la interoperabilidad
		'****docConfiguracion.ReplaceItemValue CAMPO_CONFIG_PATH_DB_PDD, Cstr(PathDBPDD)
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Set PathDBPDD", "")
		Exit Property
	End Property
	
'*****************************************************************************************************************
	
	Public Property Get PathDBPDD As String
		On Error Goto handler
		' se obtiene de la interoperabilidad de conf documentos
		Dim pos As Long
		If Me.ClaveInter.isMember(Ucase(KEY_INTEROP_BASEDOC), pos, False) Then 
			PathDBPDD = Me.RutaInter.getElement(pos)
		End If
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Get PathDBPDD","")
		Exit Property
	End Property
	
'*****************************************************************************************************************

	Public Property Get BasesCreadas As Vector
		On Error GoTo handler
		Set BasesCreadas = New Vector(0)
		BasesCreadas.Values = docConfiguracion.Getitemvalue(CAMPO_CONFIG_BASESCREADAS)
		
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Get BasesCreadas","")
		Exit Property
	End Property
'*****************************************************************************************************************
	
	Public Property Set BasesCreadas As Vector
		On Error GoTo handler
		Call docConfiguracion.Replaceitemvalue(CAMPO_CONFIG_BASESCREADAS, BasesCreadas.Values)
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Set BasesCreadas","")
		Exit Property
	End Property
'*****************************************************************************************************************
	Public Property Get BasesCreadasIni As Vector
		On Error GoTo handler
		Set BasesCreadasIni = New Vector(0)
		BasesCreadasIni.Values = docConfiguracion.Getitemvalue(CAMPO_CONFIG_BASESCREADASINI)
		
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Get BasesCreadasIni","")
		Exit Property
	End Property
	'*****************************************************************************************************************
	
	Public Property Set BasesCreadasIni As Vector
		On Error GoTo handler
		Call docConfiguracion.Replaceitemvalue(CAMPO_CONFIG_BASESCREADASINI, BasesCreadasINI.Values)
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Set BasesCreadasINI","")
		Exit Property
	End Property	
'*****************************************************************************************************************
	Public Property Get NumeradoresIni As Vector
		On Error GoTo handler
		Set NumeradoresIni = New Vector(0)
		NumeradoresIni.Values = docConfiguracion.Getitemvalue(CAMPO_CONFIG_NUMERADORES)
		
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Get NumeradoresIni","")
		Exit Property
	End Property
'*****************************************************************************************************************
	
	Public Property Set NumeradoresIni As Vector
		On Error GoTo handler
		Call docConfiguracion.Replaceitemvalue(CAMPO_CONFIG_NUMERADORES, NumeradoresIni.Values)
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Set NumeradoresIni","")
		Exit Property
	End Property	
'*****************************************************************************************************************
	Public Property Get NumerosIni As Vector
		On Error GoTo handler
		Set NumerosIni = New Vector(0)
		NumerosIni.Values = docConfiguracion.Getitemvalue(CAMPO_CONFIG_NUMEROS)
		
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Get NumerosIni","")
		Exit Property
	End Property
'*****************************************************************************************************************
	
	Public Property Set NumerosIni As Vector
		On Error GoTo handler
		Call docConfiguracion.Replaceitemvalue(CAMPO_CONFIG_NUMEROS, NumerosIni.Values)
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Set NumerosIni","")
		Exit Property
	End Property				
'*****************************************************************************************************************	
	Public Property Set PathDBAuditoriaPDD As String
		On Error Goto handler
		'no se usa, cambio para la interoperabilidad
		'****docConfiguracion.ReplaceItemValue CAMPO_CONFIG_PATH_DB_AUDITORIA_PDD, Cstr(PathDBAuditoriaPDD)
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Set PathDBAuditoriaPDD","")
		Exit Property
	End Property
	
'*****************************************************************************************************************
	
	Public Property Get PathDBAuditoriaPDD As String
		On Error Goto handler
'		PathDBAuditoriaPDD = Cstr(docConfiguracion.GetItemValue (CAMPO_CONFIG_PATH_DB_AUDITORIA_PDD)(0))
		Dim pos As Long
		If Me.ClaveInter.isMember(Ucase(KEY_INTEROP_AUDITORIA), pos, False) Then 
			PathDBAuditoriaPDD = Me.RutaInter.getElement(pos)
		End If
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Get PathDBAuditoriaPDD","")
		Exit Property
	End Property		
	
'*****************************************************************************************************************
	Public Property Set WSdocLista As String		
		On Error Goto handler
		docConfiguracion.ReplaceItemValue CAMPO_WSDOC_LISTA,WSdocLista	
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Set WSdocLista","")
		Exit Property
	End Property
	
'*****************************************************************************************************************
	
	Public Property Get WSdocLista As String
		On Error Goto handler
		WSdocLista= Cstr(docConfiguracion.GetItemValue (CAMPO_WSDOC_LISTA)(0))
		
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Get WSdocLista","")
		Exit Property
	End Property		
'*****************************************************************************************************************
	
	Public Property Set WSdocVista As String		
		On Error Goto handler
		docConfiguracion.ReplaceItemValue CAMPO_WSDOC_VISTA,WSdocVista	
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Set WSdocVista","")
		Exit Property
	End Property
	
'*****************************************************************************************************************
	
	Public Property Get WSdocVista As String
		On Error Goto handler
		WSdocVista= Cstr(docConfiguracion.GetItemValue (CAMPO_WSDOC_VISTA)(0))
		
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Get WSdocVista","")
		Exit Property
	End Property			
'*****************************************************************************************************************
	
	Public Property Set WSdocTagAtt As String		
		On Error Goto handler
		docConfiguracion.ReplaceItemValue CAMPO_WSDOC_TAGATT,WSdocTagAtt	
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Set WSdocTagAtt","")
		Exit Property
	End Property
	
'*****************************************************************************************************************
	
	
	Public Property Get WSdocTagAtt As String
		On Error Goto handler
		WSdocTagAtt= Cstr(docConfiguracion.GetItemValue (CAMPO_WSDOC_TAGATT)(0))
		
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Get WSdocTagAtt","")
		Exit Property
	End Property			
'*****************************************************************************************************************
	
	Public Property Set WSvisLista As String		
		On Error Goto handler
		docConfiguracion.ReplaceItemValue CAMPO_WSVIS_LISTA,WSvisLista	
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Set WSvisLista","")
		Exit Property
	End Property
	
'*****************************************************************************************************************
	
	Public Property Get WSvisLista As String
		On Error Goto handler
		WSvisLista= Cstr(docConfiguracion.GetItemValue (CAMPO_WSVIS_LISTA)(0))
		
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Get WSvisLista","")
		Exit Property
	End Property			
'*****************************************************************************************************************
	
	Public Property Set WSvisVistaFT As String		
		On Error Goto handler
		docConfiguracion.ReplaceItemValue CAMPO_WSVIS_VISTAFT,WSvisVistaFT	
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Set WSvisVistaFT","")
		Exit Property
	End Property
	
'*****************************************************************************************************************
	
	Public Property Get WSvisVistaFT As String
		On Error Goto handler
		WSvisVistaFT= Cstr(docConfiguracion.GetItemValue (CAMPO_WSVIS_VISTAFT)(0))
		
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Get WSvisVistaFT","")
		Exit Property
	End Property			
'*****************************************************************************************************************	
	
	Public Property Set WSvisVistaVer As String		
		On Error Goto handler
		docConfiguracion.ReplaceItemValue CAMPO_WSVIS_VISTAVER,WSvisVistaVer	
		Exit Property 
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Set WSvisVistaVer","")
		Exit Property
	End Property
	
'*****************************************************************************************************************	
	
	Public Property Get WSvisVistaVer As String
		On Error Goto handler
		WSvisVistaVer= Cstr(docConfiguracion.GetItemValue (CAMPO_WSVIS_VISTAVER)(0))
		
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Get WSvisVistaVer","")
		Exit Property
	End Property			
'*****************************************************************************************************************		
	
	Public Property Set WSvisTamPag As Integer		
		On Error Goto handler
		docConfiguracion.ReplaceItemValue CAMPO_WSVIS_TAMPAG,Cint(WSvisTamPag)
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Set WSvisTamPag","")
		Exit Property
	End Property
	
'*****************************************************************************************************************	
	
	Public Property Get WSvisTamPag As Integer
		On Error Goto handler
		WSvisTamPag= docConfiguracion.GetItemValue (CAMPO_WSVIS_TAMPAG)(0)
		
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Get WSvisTamPag","")
		Exit Property
	End Property			
'*****************************************************************************************************************			
'*****************************************************************************************************************			
	Public Property Set PathDBMotorPDD As String
		On Error Goto handler
		'no se usa, cambio para interoperabilidad
		'docConfiguracion.ReplaceItemValue CAMPO_CONFIG_PATH_DB_MOTOR_PDD, Cstr(PathDBMotorPDD)
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Set PathDBMotorPDD","")
		Exit Property		
	End Property
	
'*****************************************************************************************************************
	
	Public Property Get PathDBMotorPDD As String
		On Error Goto handler
		Dim pos As Long
		If Me.ClaveInter.isMember(Ucase(KEY_INTEROP_MOTOR), pos, False) Then 
			PathDBMotorPDD = Me.RutaInter.getElement(pos)
		End If
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Get PathDBMotorPDD","")
		Exit Property
	End Property
'*****************************************************************************************************************
	
	Public Property Set PathDBNumeracionPDD As String
		On Error Goto handler
		'no se usa, cambio a la interoperabilidad
		'docConfiguracion.ReplaceItemValue  CAMPO_CONFIG_PATH_NUMERACION, Cstr(PathDBNumeracionPDD)
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Set PathDBNumeracionPDD","")
		Exit Property		
	End Property
	
'*****************************************************************************************************************
	
	Public Property Get PathDBNumeracionPDD As String
		On Error Goto handler
'		PathDBNumeracionPDD = Cstr(docConfiguracion.GetItemValue ( CAMPO_CONFIG_PATH_NUMERACION)(0))
		Dim pos As Long
		If Me.ClaveInter.isMember(Ucase(KEY_INTEROP_NUMDOC), pos, False) Then 
			PathDBNumeracionPDD = Me.RutaInter.getElement(pos)
		End If
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Get PathDBNumeracionPDD","")
		Exit Property
	End Property
	
'******************************************************************************************************************	
	
	Public Property Set Host As String
		On Error Goto handler
		'no se usa, cambio a la interoperabilidad
		'docConfiguracion.ReplaceItemValue CAMPO_CONFIG_HOST_SERVER, Cstr(Host)
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Set Host","")
		Exit Property
	End Property
	
'******************************************************************************************************************	
	
	Public Property Get CantMBPorBase As Long
		On Error GoTo handler
		'no se usa, cambio a la interoperabilidad
		CantMBPorBase = docConfiguracion.Getitemvalue(CAMPO_CONFIG_CANTMBXBASE)(0) 
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Get CantMBPorBase","")
		Exit Property
	End Property	
	
'******************************************************************************************************************	
	
	Public Property Set CantMBPorBase As Long
		On Error GoTo handler
		'no se usa, cambio a la interoperabilidad
		docConfiguracion.ReplaceItemValue CAMPO_CONFIG_CANTMBXBASE, CLng(CantMBPorBase)
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Set CantMBPorBase","")
		Exit Property
	End Property		
'******************************************************************************************************************	
	
	Public Property get CantDocPorBase As Long
		On Error GoTo handler
		'no se usa, cambio a la interoperabilidad
		CantDocPorBase = docConfiguracion.Getitemvalue(CAMPO_CONFIG_CANTDOCXBASE)(0) 
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Get CantDocPorBase","")
		Exit Property
	End Property	
	
'******************************************************************************************************************	
	
	Public Property Set CantDocPorBase As long
		On Error GoTo handler
		'no se usa, cambio a la interoperabilidad
		docConfiguracion.ReplaceItemValue CAMPO_CONFIG_CANTDOCXBASE, clng(CantDocPorBase)
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Set CantDocPorBase","")
		Exit Property
	End Property	
'******************************************************************************************************************
	
	Public Property Get Host As String
		On Error Goto handler
		Host = Cstr(docConfiguracion.GetItemValue(CAMPO_CONFIG_HOST_SERVER)(0))
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Get Host","")
		Exit Property
	End Property
	
	Public Property Get Protocolo As String
		On Error GoTo handler
		Protocolo	 = CStr(docConfiguracion.GetItemValue(CAMPO_IGDOC_PROTOCOLO)(0))
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Get Protocolo","")
		Exit Property
	End Property
	
	Public Property Get Puerto As String
		On Error GoTo handler
		Puerto = CStr(docConfiguracion.GetItemValue(CAMPO_IGDOC_PUERTO)(0))
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Get Puerto","")
		Exit Property
	End Property
	
'******************************************************************************************************************
	Public Property Set TamMaxAnexos As String
		On Error Goto handler
		docConfiguracion.ReplaceItemValue CAMPO_CONFIG_TAM_MAX_ANEXOS, TamMaxAnexos
		Exit Property
handler:
		Msgbox "El error en TAMMAXANEXO es: " & Error & " " & Err & " " & Erl 
		Call  RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Get TamMaxAnexos","")
		Exit Property
	End Property
'******************************************************************************************************************
	Public Property Get TamMaxAnexos As String
		On Error Goto handler
		TamMaxAnexos = docConfiguracion.GetItemValue(CAMPO_CONFIG_TAM_MAX_ANEXOS)(0)
		Exit Property
handler:
		Msgbox "El error en TAMMAXANEXO es: " & Error & " " & Err & " " & Erl 
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Get TamMaxAnexos","")
		Exit Property
	End Property
	
'******************************************************************************************************************
	
	Public Property Set RendimientoPor As String
		On Error GoTo handler
		docConfiguracion.ReplaceItemValue CAMPO_CONFIG_RENDIMIENTOPOR, CStr(RendimientoPor)
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Set RendimientoPor","")
		Exit Property
	End Property
	
'*****************************************************************************************************************
	
	Public Property Get RendimientoPor As String
		On Error GoTo handler
		RendimientoPor = CStr(docConfiguracion.GetItemValue (CAMPO_CONFIG_RENDIMIENTOPOR)(0))
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Get RendimientoPor","")
		Exit Property
	End Property	
'******************************************************************************************************************
	
	Public Property Set CACert As String
		On Error Goto handler
		docConfiguracion.ReplaceItemValue CAMPO_CONFIG_CA_CERT, Cstr(CACert)
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Set CACert","")
		Exit Property
	End Property
	
'*****************************************************************************************************************
	
	Public Property Get CACert As String
		On Error Goto handler
		CACert = Cstr(docConfiguracion.GetItemValue (CAMPO_CONFIG_CA_CERT)(0))
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"Clase ConfDocumentos - Propiedad Get CACert","")
		Exit Property
	End Property		
	
'*****************************************************************************************************************
	
	Public Property Set Auditar As Boolean
		On Error Goto handler
		If Auditar Then
			docConfiguracion.ReplaceItemValue CAMPO_CONFIG_AUDITAR, NUM_CHECK_TRUE
		Else
			docConfiguracion.ReplaceItemValue CAMPO_CONFIG_AUDITAR, NUM_CHECK_FALSE
		End If
		Exit Property
handler:
		Call  RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Set Auditar","")
		Exit Property
	End Property
	
'******************************************************************************************************************
	
	Public Property Get Auditar As Boolean
		On Error Goto handler
		If docConfiguracion.GetItemValue(CAMPO_CONFIG_AUDITAR)(0) = NUM_CHECK_TRUE Then 
			Auditar = True
		Else
			Auditar = False
		End If
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Get Auditar","")
		Exit Property
	End Property
'*****************************************************************************************************************
	
	Public Property Set PubEstricta As Boolean
		On Error Goto handler
		If PubEstricta Then
			docConfiguracion.ReplaceItemValue CAMPO_CONFIG_PUB_ESTRICTA, NUM_CHECK_TRUE
		Else
			docConfiguracion.ReplaceItemValue CAMPO_CONFIG_PUB_ESTRICTA, NUM_CHECK_FALSE
		End If
		Exit Property
handler:
		Call  RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Set PubEstricta","")
		Exit Property
	End Property
	
'******************************************************************************************************************
	
	Public Property Get PubEstricta As Boolean
		On Error Goto handler
		If docConfiguracion.GetItemValue(CAMPO_CONFIG_PUB_ESTRICTA)(0) = NUM_CHECK_TRUE Then 
			PubEstricta = True
		Else
			PubEstricta = False
		End If
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Get PubEstricta","")
		Exit Property
	End Property	
	
'******************************** INTEROPERABILIDAD *****************************************************
	
	Public Property Get ClaveInter  As Vector
		On Error Goto handler
		Set ClaveInter = New vector(0)
		If docConfiguracion.HasItem(CAMPO_CONFIG_CLAVE_INTER) Then
			ClaveInter.values = docCOnfiguracion.GetItemValue(CAMPO_CONFIG_CLAVE_INTER	)
		End If
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Get ClaveInter","")
		Exit Property
	End Property
	
'******************************************************************************************************************	
	
	Public Property Set ClaveInter As Vector
		On Error Goto handler
		docConfiguracion.ReplaceItemValue CAMPO_CONFIG_CLAVE_INTER, ClaveInter.values
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Set ClaveInter","")
		Exit Property
	End Property
	
'******************************************************************************************************************	
	
	Public Property Get ServidorInter  As Vector
		On Error Goto handler
		Set ServidorInter = New vector(0)
		If docConfiguracion.HasItem(CAMPO_CONFIG_SERVIDOR_INTER) Then
			ServidorInter.values = docCOnfiguracion.GetItemValue(CAMPO_CONFIG_SERVIDOR_INTER)
		End If
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Get ServidorInter","")
		Exit Property
	End Property
	
'******************************************************************************************************************	
	
	Public Property Set ServidorInter As Vector
		On Error Goto handler
		docConfiguracion.ReplaceItemValue CAMPO_CONFIG_SERVIDOR_INTER, ServidorInter.values
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Set ServidorInter","")
		Exit Property
	End Property
	
	
'******************************************************************************************************************	
	
	Public Property Get HostInter  As Vector
		On Error Goto handler
		Set HostInter = New vector(0)
		If docConfiguracion.HasItem(CAMPO_CONFIG_HOST_INTER) Then
			HostInter.values = docCOnfiguracion.GetItemValue(CAMPO_CONFIG_HOST_INTER)
		End If
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Get HostInter","")
		Exit Property
	End Property
	
'******************************************************************************************************************	
	
	Public Property Set HostInter As Vector
		On Error Goto handler
		docConfiguracion.ReplaceItemValue CAMPO_CONFIG_HOST_INTER, HostInter.values
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Set HostInter","")
		Exit Property
	End Property
	
'******************************************************************************************************************	
	
	Public Property Get RutaInter  As Vector
		On Error Goto handler
		Set RutaInter = New vector(0)
		If docConfiguracion.HasItem(CAMPO_CONFIG_RUTA_INTER) Then
			RutaInter.values = docCOnfiguracion.GetItemValue(CAMPO_CONFIG_RUTA_INTER)
		End If
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Get RutaInter","")
		Exit Property
	End Property
	
'******************************************************************************************************************	
	
	Public Property Set RutaInter As Vector
		On Error Goto handler
		docConfiguracion.ReplaceItemValue CAMPO_CONFIG_RUTA_INTER, RutaInter.values
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Set RutaInter","")
		Exit Property
	End Property
	
'******************************************************************************************************************
'**************************	NUMERACION **************************************************************************
'******************************************************************************************************************	
	
	Public Property Get NumUtilizarInciso As Boolean
		On Error Goto handler
		If Cstr(docConfiguracion.GetItemValue(CAMPO_CONFIG_NUM_INCISO)(0)) = NUM_CHECK_TRUE Then
			NumUtilizarInciso = True	
		Else
			NumUtilizarInciso = False
		End If
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Get NumUtilizarInciso","")
		Exit Property
	End Property
	
'******************************************************************************************************************	
	
	Public Property Set NumUtilizarInciso As Boolean
		On Error Goto handler
		If NumUtilizarInciso Then
			docConfiguracion.ReplaceItemValue CAMPO_CONFIG_NUM_INCISO, NUM_CHECK_TRUE
		Else
			docConfiguracion.ReplaceItemValue CAMPO_CONFIG_NUM_INCISO, NUM_CHECK_FALSE
		End If
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Set NumUtilizarInciso","")
		Exit Property
	End Property
	
'******************************************************************************************************************
	
	Public Property Get NumUtilizarCodigo As Boolean
		On Error Goto handler
		If Cstr(docConfiguracion.GetItemValue(CAMPO_CONFIG_NUM_UNIDAD)(0)) = NUM_CHECK_TRUE Then
			NumUtilizarCodigo = True
		Else
			NumUtilizarCodigo = False
		End If
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Get NumUtilizarCodigo","")
		Exit Property
	End Property
	
'******************************************************************************************************************	
	
	Public Property Set NumUtilizarCodigo As Boolean
		On Error Goto handler
		If NumUtilizarCodigo Then
			docConfiguracion.ReplaceItemValue CAMPO_CONFIG_NUM_UNIDAD, NUM_CHECK_TRUE
		Else
			docConfiguracion.ReplaceItemValue CAMPO_CONFIG_NUM_UNIDAD, NUM_CHECK_FALSE
		End If
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Set NumUtilizarCodigo","")
		Exit Property
	End Property
	
'******************************************************************************************************************
	
	Public Property Get NumeracionUnica As Boolean
		On Error Goto handler
		If Cstr(docConfiguracion.GetItemValue(CAMPO_CONFIG_NUM_UNICA)(0) =NUM_CHECK_TRUE) Then
			NumeracionUnica = True
		Else
			NumeracionUnica = False
		End If
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Get NumeracionUnica","")
		Exit Property
	End Property
	
'******************************************************************************************************************	
	
	Public Property Set NumeracionUnica As Boolean
		On Error Goto handler
		If NumeracionUnica Then
			docConfiguracion.ReplaceItemValue CAMPO_CONFIG_NUM_UNICA, NUM_CHECK_TRUE
		Else
			docConfiguracion.ReplaceItemValue CAMPO_CONFIG_NUM_UNICA, NUM_CHECK_FALSE
		End If
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Set NumeracionUnica","")
		Exit Property
	End Property
	
'******************************************************************************************************************
	
	Public Property Get NumFormato As Vector
		On Error Goto handler
		Set NumFormato = New vector(0)
		If docConfiguracion.HasItem(CAMPO_CONFIG_NUM_FORMATO) Then
			NumFormato.values = docCOnfiguracion.GetItemValue(CAMPO_CONFIG_NUM_FORMATO)
		End If
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Get NumFormato","")
		Exit Property
	End Property
	
'******************************************************************************************************************	
	
	Public Property Set NumFormato As Vector
		On Error Goto handler
		docConfiguracion.ReplaceItemValue CAMPO_CONFIG_NUM_FORMATO, NumFormato.values
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Set NumFormato","")
		Exit Property
	End Property
	'******************************************************************************************************************
	
	Public Property Get NumClaveNum As Vector
		On Error Goto handler
		Set NumClaveNum = New Vector(0)
		If docConfiguracion.HasItem(CAMPO_CONFIG_NUM_CLAVE_NUM) Then
			NumClaveNum.values = docConfiguracion.GetItemValue(CAMPO_CONFIG_NUM_CLAVE_NUM)
		End If
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Get NumClaveNum","")
		Exit Property
	End Property
	
'******************************************************************************************************************	
	
	
	Public Property Set NumClaveNum As Vector
		On Error Goto handler
		docConfiguracion.ReplaceItemValue CAMPO_CONFIG_NUM_CLAVE_NUM, NumClaveNum.values
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Set NumClaveNum","")
		Exit Property
	End Property
	
'******************************************************************************************************************	
'***************************	ARCHIVOS ***************************************************************************	
'******************************************************************************************************************
	
	Public Property Get pathArchivos As String
		On Error Goto handler
		pathArchivos=Cstr(docConfiguracion.GetItemValue(CAMPO_CONFIG_PATH_ARCHIVOS)(0))
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Get pathArchivos","")
		Exit Property
	End Property	
'*************************************************************************************************************
	Public Property Set pathArchivos As String
		On Error Goto handler
		docConfiguracion.ReplaceItemValue CAMPO_CONFIG_PATH_ARCHIVOS, pathArchivos
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Set pathArchivos","")
		Exit Property
	End Property	
	
'******************************************************************************
	
	Public Sub Archivar(doc As NotesDocument)
		On Error Goto handler
		Dim baseDatos As NotesDatabase
		
		Dim pos As Long
		Dim rutaBaseArchivos As String
		Dim keyInterop As New Vector(0)
		Dim pathsInterop As New Vector(0)
		
		keyInterop.values = docConfiguracion.GetItemValue(CAMPO_CONFIG_CLAVE_INTER)
		pathsInterop.values = docConfiguracion.GetItemValue(CAMPO_CONFIG_RUTA_INTER)
		
		If keyInterop.isMember(KEY_INTEROP_ARCHIVO, pos, False) Then
			rutaBaseArchivos = pathsInterop.getElement(pos)
			Set baseDatos = ses.GetDatabase(ses.CurrentDatabase.Server, rutaBaseArchivos)
			Call baseDatos.AllDocuments.AddDocument(doc)
		Else
			Error "404", "NO SE ENCUENTRA LAS RUTA A LA BASE DE ARCHIVO EN LA CONFIGURACION"
		End If
		
		Exit Sub
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Get NumeracionUnica","")
		Exit Sub
	End Sub
	
	
	
	
'******************************************************************************************************************
'***************************	AUDITORIA ***************************************************************************	
'******************************************************************************************************************
	
	Public Property Get TiempoVidaAuditoria As String
		On Error Goto handler
		TiempoVidaAuditoria = Cstr(docConfiguracion.GetItemValue(CAMPO_CONFIG_AUDITORIA_CANT_DIAS)(0))
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Get TiempoVidaAuditoria","")
		Exit Property
	End Property
	
'******************************************************************************************************************	
	
	Public Property Set TiempoVidaAuditoria As String
		On Error Goto handler
		docConfiguracion.ReplaceItemValue CAMPO_CONFIG_AUDITORIA_CANT_DIAS, Cstr(TiempoVidaAuditoria)
		
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Set TiempoVidaAuditoria","")
		Exit Property
	End Property
	
'******************************************************************************************************************	
	
	Public Property Get ClavesAuditoria As Vector
		On Error Goto handler
		Set ClavesAuditoria = New Vector(0)
		If docConfiguracion.hasItem(CAMPO_CONFIG_AUDITORIA_CLAVE) Then
			ClavesAuditoria.values = docConfiguracion.getItemValue(CAMPO_CONFIG_AUDITORIA_CLAVE)
		End If
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Get ClavesAuditoria","")
		Exit Property
	End Property
	
'******************************************************************************************************************	
	
	Public Property Set ClavesAuditoria  As Vector
		On Error Goto handler
		docConfiguracion.ReplaceItemValue CAMPO_CONFIG_AUDITORIA_CLAVE, ClavesAuditoria.values
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Set ClavesAuditoria ","")
		Exit Property
	End Property
	
'******************************************************************************************************************	
	
	Public Property Get FechasAuditoria As Vector
		On Error Goto handler
		Set FechasAuditoria = New Vector(0)
		If docConfiguracion.HasItem(CAMPO_CONFIG_AUDITORIA_FECHA_C) Then
			FechasAuditoria.values = docConfiguracion.GetItemValue(CAMPO_CONFIG_AUDITORIA_FECHA_C)
		End If
		Exit Property
handler:
		Msgbox "Erl:" & Erl
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Get FechasAuditoria","")
		Exit Property
	End Property
	
'******************************************************************************************************************	
	
	Public Property Set FechasAuditoria As Vector
		On Error Goto handler
		docConfiguracion.ReplaceItemValue CAMPO_CONFIG_AUDITORIA_FECHA_C,FechasAuditoria.values
		Exit Property
handler:
		Call RegistrarYGenerarError(NOMBRE_APLICACION, "Clase ConfDocumentos - Propiedad Set FechasAuditoria","")
		Exit Property
	End Property

	Public Function ObtenerNombreServidor(Byval sValor As String) As String
	' Retorna el verdadero valor del servidor en caso que sea una clave
		On Error Goto HANDLER
		'me dijo el cabeza
		ObtenerNombreServidor = ses.CurrentDatabase.Server		
		Exit Function
HANDLER:
		Call RegistraryGenerarError(NOMBRE_APLICACION,"ClaseConfDocumentos - Procedimiento ObtenerNombreServidor","")
		Exit Function
	End Function
	
'*********************************************************************************************************
	
	Public Function ReferenciarBaseDeDatos(Byval clave As String) As NotesDatabase
		'Retorna una referencia a la base de datos que recibe como parámetro.
		'En caso de que no encuentra el nombre de la base en la configuración retorna Nothing
		On Error Goto HANDLER
		Dim pos As Long
		Set ReferenciarBaseDeDatos = Nothing
		If Me.ClaveInter.isMember(Ucase(clave), pos, False) Then 
			Set ReferenciarBaseDeDatos = New NotesDatabase(ObtenerNombreServidor(Me.servidorinter.getElement(pos)), Me.RutaInter.getElement(pos))
		End If
		Exit Function
HANDLER:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"ClaseConfDocumentos - Método ReferenciarBaseDeDatos","")
		Exit Function
		
	End Function
	
'*********************************************************************************************************
	
	Public Function PathOrganizacion As String
		On Error Goto HANDLER
		
		' se obtiene de la interoperabilidad de conf documentos
		Dim pos As Long
		If Me.ClaveInter.isMember(Ucase(KEY_INTEROP_ORG), pos, False) Then 
			PathOrganizacion = Me.RutaInter.getElement(pos)
		End If
HANDLER:
		Call RegistrarYGenerarError(NOMBRE_APLICACION,"ClaseConfDocumentos - Método PathOrganizacion","")
		Exit Function
		
	End Function
	
'*********************************************************************************************************
	
	Public Function HostByKey(clave As String) As String
		' retorna el host correspondiente a la 'clave' en la tabla de interoperabilidad.
		' si no se encuentra la 'clave', retorna el string vacio.
		On Error Goto handler
		Dim hostResult As String
		Dim pos As Long
		hostResult = ""
		If Me.ClaveInter.isMember(Ucase(clave), pos, False) Then
			hostResult = Me.HostInter.getElement(pos)			
		End If
		HostByKey = hostResult
		Exit Function
handler:
		Call RegistrarYGenerarError (NOMBRE_APLICACION, "Clase ConfDocumentos - Método HostByKey","")
		Exit Function
	End Function
	
'*************************************************************************************************************************************		
	
	Public Sub addAuditoriaDate(sClave As String,dCreacion As Variant)
		'dCreacion es de tipo Date, sClave=clave de la base
		Dim itClaves As notesItem,itFechas As notesItem,aFechas As Variant
		
		If docConfiguracion.hasItem(CAMPO_CONFIG_AUDITORIA_CLAVE) Then
			Set itClaves=docConfiguracion.getFirstItem(CAMPO_CONFIG_AUDITORIA_CLAVE)
		Else
			Set itClaves=New notesItem(docConfiguracion,CAMPO_CONFIG_AUDITORIA_CLAVE,"")	
		End If
		itClaves.appendToTextlist sClave
		If docConfiguracion.hasItem(CAMPO_CONFIG_AUDITORIA_FECHA_C) Then
			Set itFechas=docConfiguracion.getFirstItem(CAMPO_CONFIG_AUDITORIA_FECHA_C)
		Else
			Set itFechas=New notesItem(docConfiguracion,CAMPO_CONFIG_AUDITORIA_FECHA_C,"")		
		End If
		aFechas=itFechas.values
		Redim Preserve aFechas(Lbound(itClaves.values) To Ubound(itClaves.values))
		aFechas(Ubound(itClaves.values))=dCreacion
		itFechas.values=aFechas
	End Sub
'*************************************************************************************************************************************	


'******************************************************************************************************************
End Class