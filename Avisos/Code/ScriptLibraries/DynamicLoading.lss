'++LotusScript Development Environment:2:5:(Options):0:74
'********************************************************************************************************
'							Actualizaciones
'********************************************************************************************************
%REM
	1.0	20/08/2008	Modificado por: Alejandro Goñi
		Versión base, no se modificó la que ya existía

%END REM

Option Public
Option Declare

Use "VectorClass 2.05"
Use "FuncionesGenerales"

'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Sub InvocarMetodoClase(nombreClase As String, tiposParametrosNew As Vector, parametrosNew As Vector, _
nombreMetodo As String, tiposParametrosMetodo As Vector, parametrosMetodo As Vector)
Declare Function FactoryClassInLibrary(className As String, library As string) As Variant
Declare Sub FactoryClassWithParam(className As String, tiposParametros As Vector, parametros As Vector)
Declare Function FactoryClassWithParamInLibrary(className As String, library As String, tiposParametros As Vector, parametros As Vector) As Variant
Declare Function FactoryClass(className As String) As Variant

'++LotusScript Development Environment:2:5:(Declarations):0:10
Public instancia As Variant
Dim codigo As String
Dim mensajeDeError As String


Public Const NOMBRE_APLICACION_MOTOR	= "iGDoc"
Public Const TIPO_STRING = "String"
Public Const DOCDATOS_ESTADO_PROCESAMIENTO = "EstadoProcesamiento"

'++LotusScript Development Environment:2:2:InvocarMetodoClase:2:8
Sub InvocarMetodoClase(nombreClase As String, tiposParametrosNew As Vector, parametrosNew As Vector, _
nombreMetodo As String, tiposParametrosMetodo As Vector, parametrosMetodo As Vector)
	On Error Goto errorHandler
	
	Dim esPrimerParametro As Boolean
	Dim param As String
	Dim paramCasteado As String
	Dim i As Integer

	Call FactoryClassWithParam(nombreClase, tiposParametrosNew, parametrosNew)

	codigo = |Use "| & nombreClase & |"| + Chr(10) + Chr(13) + |mensajeDeError = instancia.| & nombreMetodo & |(|
	esPrimerParametro = True
	i = 1	
	
	Forall tipo In tiposParametrosMetodo.Values
		
		param =  parametrosMetodo.GetElement(i)
		
		Select Case tipo
		Case TIPO_STRING
			paramCasteado = |{| + param + |}|
		Case Else
			paramCasteado = param			
		End Select
		
		If esPrimerParametro Then
			codigo = codigo + paramCasteado
			esPrimerParametro = False
		Else
			codigo = codigo + ", " + paramCasteado
		End If
		
		i = i + 1
	End ForAll
	
	codigo = codigo + ")"
	
	'Msgbox codigo 
	Execute(codigo)
	If mensajeDeError <> "" Then
		Error 1300, mensajeDeError
	End If
	Exit Sub
errorHandler:
	Msgbox "DynamicLoading - InvocarMetodoClase: " & Error$ & " " & Erl
	Call RegistrarYGenerarError(NOMBRE_APLICACION_MOTOR, "Clase DynamicLoading - Sub IncovarMetodoClase", "")
	Exit Sub
End Sub

'++LotusScript Development Environment:2:1:FactoryClassInLibrary:2:8

Function FactoryClassInLibrary(className As String, library As string) As Variant
	
	codigo = |Use "| & library & |"|  & Chr(10) & Chr(13) & | set instancia = New | & classname & |() |
	Execute codigo	
	Set FactoryClassInLibrary = instancia
	
End Function

'++LotusScript Development Environment:2:2:FactoryClassWithParam:1:8
Sub FactoryClassWithParam(className As String, tiposParametros As Vector, parametros As Vector)
	On Error Goto errorHandler
	
	Dim esPrimerParametro As Boolean
	Dim param As String
	Dim paramCasteado As String
	Dim i As Integer
	
	codigo = |Use "| & className & |"| & Chr(10) & Chr(13) & |Set instancia = New | & classname & |(|
	
	esPrimerParametro = True
	i = 1
	
	Forall tipo In tiposParametros.Values
		
		param = parametros.GetElement(i)
		
		Select Case tipo
		Case TIPO_STRING
			paramCasteado = |"| + param + |"|
		Case Else
			paramCasteado = param
		End Select
		
		If esPrimerParametro Then
			codigo = codigo + paramCasteado
			esPrimerParametro = False
		Else
			codigo = codigo + ", " + paramCasteado
		End If
		
		i = i + 1
	End Forall
	
	codigo = codigo + ")"
	Msgbox codigo
	
	Execute codigo
	Exit Sub
errorHandler:
	Msgbox "DynamicLoading - FactoryClassWithParam: " & Error$ & " " & Erl
	Exit Sub
End Sub

'++LotusScript Development Environment:2:1:FactoryClassWithParamInLibrary:2:8

Function FactoryClassWithParamInLibrary(className As String, library As String, tiposParametros As Vector, parametros As Vector) As Variant
	On Error GoTo errorHandler
	
	Dim esPrimerParametro As Boolean
	Dim param As String
	Dim paramCasteado As String
	Dim i As Integer
	
	codigo = |Use "| & library & |"| & Chr(10) & Chr(13) & |Set instancia = New | & classname & |(|
	
	esPrimerParametro = True
	i = 1
	
	ForAll tipo In tiposParametros.Values
		
		param = parametros.GetElement(i)
		
		Select Case tipo
		Case TIPO_STRING
			paramCasteado = |"| + param + |"|
		Case Else
			paramCasteado = param
		End Select
		
		If esPrimerParametro Then
			codigo = codigo + paramCasteado
			esPrimerParametro = False
		Else
			codigo = codigo + ", " + paramCasteado
		End If
		
		i = i + 1
	End ForAll
	
	codigo = codigo + ")"
	MsgBox codigo
	
	Execute codigo
	
	Set FactoryClassWithParamInLibrary = instancia
	
	Exit Function
errorHandler:
	MsgBox "DynamicLoading - FactoryClassWithParamInLibrary: " & Error$ & " " & Erl
	Exit Function
End Function


'++LotusScript Development Environment:2:1:FactoryClass:1:8
Function FactoryClass(className As String) As Variant
	
	codigo = |Use "| & className & |"|  & Chr(10) & Chr(13) & | set instancia = New | & classname & |() |
	Execute codigo	
	Set FactoryClass = instancia
	
End Function