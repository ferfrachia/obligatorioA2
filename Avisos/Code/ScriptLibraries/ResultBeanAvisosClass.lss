'++LotusScript Development Environment:2:5:(Options):0:74
Option Public
Option Declare

Use "AvisosConfig"


'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Public Class ResultBeanAvisos

'++LotusScript Development Environment:2:5:(Declarations):0:10
'**********************************************************************************************************************************
'**********************************************************************************************************************************

Public Class ResultBeanAvisos
	
	Private strHost As String
	Private strForm As String
	Private campos As Vector
	Private tipos As Vector
	Private values As vector
	
'**********************************************************************************************************************************
	Public Sub new (doc As NotesDocument, strHostTemp As String, pCampos As Vector, pTipos As Vector)
		On Error Goto handler
		
		Dim strAux As String
		Dim db As NotesDatabase
		Dim viewBusAct As NotesView
		Dim docAux As NotesDocument
		Dim session As New NotesSession
		Dim strestado As String
		Dim estado As Integer
		Dim tipo As Integer
		Dim strTipo As String
		Dim strNumeroDoc As String
		
		Set values = New Vector(0)
		
		' Cargo los campos de la configuración 
		Dim i As Integer			
		
		Set values = New Vector(0)
		Set campos = pCampos
		Set tipos = pTipos
		
		strHost = strHostTemp + "/0/" + doc.UniversalID +"?OpenDocument"
		'Msgbox "esta es la url para irme al docu"
		'Msgbox strHost
		
		For i = 1 To campos.cantElem
			Dim valor As New Vector(0)
			If tipos.getElement(i) = "Num" Then
				valor.values = doc.GetItemValue(campos.getElement(i))
			Elseif tipos.getElement(i) = "Dest" Then
				valor.values = doc.GetItemValue(campos.getElement(i))
			Elseif tipos.getElement(i) = "Estado" Then
				'Tengo que asignarle el string que le corresponde al número de estado
				'para que muestre en pantalla el nombre del estado y no su número
				
				estado = doc.GetItemValue(campos.getElement(i))(0)
				
				Select Case estado 
				Case 0
					strEstado = "Pendiente"
				Case 1
					strEstado = "Enviada"
				Case 2
					strEstado = "Enviada Confirmada"
				Case 3
					strEstado = "Confirmada"
				Case 4			
					strEstado = "Con Error"
				Case Else
					strEstado = " - "
				End Select
				
				Call valor.insertElement(strEstado, 1)
			Elseif tipos.getElement(i) = "Tipo" Then
				
				tipo = doc.GetItemValue(campos.getElement(i))(0)
				
				Select Case tipo 
				Case 0
					strTipo = "Expediente"
				Case Else
					strTipo = " - "
				End Select
				
				Call valor.insertElement(strTipo, 1)
			Elseif tipos.getElement(i) = "Fecha" Then
				valor.values = doc.GetItemValue(campos.getElement(i))	
			End If
			Call values.insertElement(valor.toString(","), i)
		Next
		
		
		Exit Sub		
handler:
		Msgbox "ResultBean "& Error & " - " & Erl
		If Err= ERROR_DOCUMENT_NOT_FOUND Then
			Dim eh As New ErrorHandler(Err,Error$, "Expediente Electrónico","ResultBean",Erl, "BúsquedaNEW")
			Call eh.registrar ("ERROR POR UNIDAD MAL MIGRADA")
			Dim dbBusq As NotesDatabase
			Dim ses As New NotesSession
			Set dbBusq = ses.GetDatabase(ses.CurrentDatabase.Server,"mail.box")
			Dim mail As NotesDocument
			Set mail = dbBusq.CreateDocument
			Call mail.ReplaceItemValue("Subject", "ERROR UNIDAD " & doc.GetItemValue("ccNroExp")(0))
			Call mail.ReplaceItemValue("BlindCopyTo","Administrador")
			Call mail.Save(True,False)
			'Call mail.Send(False,"Usuario Uno/DesarrolloISA")
			Resume Next
		Else
			Call RegistrarYGenerarError2(Err,Error,NOMBRE_APLICACION,"Clase ResultBean - Sub new","","")
		End If
		
		Exit Sub
	End Sub
	
'**********************************************************************************************************************************
	
	Public Function getDatos() As Vector
		Set getDatos = values		
	End Function
	
'**********************************************************************************************************************************
	Public Function getCampo(nombre As String) As String
		Dim pos As Vector
		Dim result As String
		
		result = ""
		Set pos = campos.getIndex(nombre)
		If pos.cantElem >= 1 Then
			result = values.getElement(pos.getElement(1))
		End If
		
		getCampo = result		
	End Function
	
'**********************************************************************************************************************************
	
	Public Function getHost() As String
		getHost = strHost
	End Function
	
'**********************************************************************************************************************************
	
	Public Function getForm() As String
		getForm = strForm
	End Function
	
'**********************************************************************************************************************************
End Class
'**********************************************************************************************************************************
'**********************************************************************************************************************************